{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/shared/utils.js","../src/observer/dep.js","../src/observer/index.js","../src/observer/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["//重写数组中的部分方法\r\nlet oldArrayProtoMethods = Array.prototype; //获取数组原型上的方法\r\nexport let newArrayProtoMethods = Object.create(oldArrayProtoMethods); //传的参数是旧的原型\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\"];\r\n\r\n// newArrayProtoMethods.push = function (value) {};\r\nmethods.forEach((method) => {\r\n\t//重写原有的方法\r\n\tnewArrayProtoMethods[method] = function (...args) {\r\n\t\t//this就是调用的数组arr,谁调用的push方法，this就是谁\r\n\t\tconst result = oldArrayProtoMethods[method].call(this, ...args); //内部还是调用原有的方法\r\n\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\tlet inserted;\r\n\t\tlet ob = this.__ob__;\r\n\t\tswitch (method) {\r\n\t\t\tcase \"push\":\r\n\t\t\tcase \"unshift\":\r\n\t\t\t\tinserted = args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"splice\": //splice(0,1,xxx)\r\n\t\t\t\tinserted = args.slice(2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t// console.log(\"inserted\", inserted);\r\n\r\n\t\tif (inserted) {\r\n\t\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\t\tob.observeArray(inserted);\r\n\t\t}\r\n\t\t//数组变化啦通知对应的watche\r\n\t\t// debugger;\r\n\t\tob.dep.notify();\r\n\t\tconsole.log(\"更新啦\", ob);\r\n\r\n\t\treturn result;\r\n\t};\r\n});\r\n","/**\r\n * 是否有自己的属性\r\n */\r\nexport function hasOwn(obj, key) {\r\n\treturn Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n/**\r\n * 判断是否是函数\r\n * @param {*} val\r\n * @returns\r\n */\r\nexport function isFunction(val) {\r\n\treturn typeof val === \"function\";\r\n}\r\n/**\r\n * 判断是否是Array\r\n */\r\nexport const isArray = Array.isArray;\r\n","let id = 0;\r\nclass Dep {\r\n\tconstructor() {\r\n\t\tthis.id = id++; //属性的dep收集watcher\r\n\t\tthis.subs = []; //存放着当前属性对应的watchher\r\n\t}\r\n\r\n\tdepend() {\r\n\t\t//这里不希望放重复的内容，而且只是一个单向的关系dep->watcher\r\n\t\t//让watcher记录dep，比如组件卸载，\r\n\t\t//在这里记录watcher会重复\r\n\t\t// this.subs.push(Dep.target);\r\n\t\t// console.log(\"添加后：\", this.subs);\r\n\r\n\t\tDep.target.addDep(this); // 让watcher记住dep\r\n\t}\r\n\t//dep记住watcher的方法\r\n\taddSub(watcher) {\r\n\t\tthis.subs.push(watcher);\r\n\t}\r\n\r\n\tnotify() {\r\n\t\tconsole.log(\"notify被调用了\");\r\n\t\tthis.subs.forEach((watcher) => {\r\n\t\t\twatcher.update(); //告诉watcher要更新了\r\n\t\t});\r\n\t}\r\n}\r\nDep.target = null;\r\n//用于存放watcher\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n\tstack.push(watcher);\r\n\tDep.target = watcher;\r\n}\r\nexport function popTarget() {\r\n\tstack.pop();\r\n\tDep.target = stack[stack.length - 1];\r\n}\r\nexport default Dep;\r\n","//数据劫持\r\nimport { newArrayProtoMethods } from \"./array\";\r\nimport { hasOwn, isArray } from \"../shared/utils\";\r\nimport Dep from \"./dep\";\r\n\r\n/**\r\n * 用于观测的类\r\n */\r\n\r\nclass Observer {\r\n\tconstructor(data) {\r\n\t\t//给每个对象都做依赖收集\r\n\t\tthis.dep = new Dep();\r\n\t\t//Object.defineProperty()只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n\t\t//vue2为此专门写了一些API比如$set,$delete，而vue3中使用了Proxy，proxy可以监控到对象（数组）的所有属性\r\n\r\n\t\t// Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n\t\tObject.defineProperty(data, \"__ob__\", {\r\n\t\t\tvalue: this,\r\n\t\t\tenumerable: false, // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n\t\t});\r\n\t\t// data.__ob__ = this;//直接这样搞会死循环，因为observe中会判断是否已经被劫持了\r\n\r\n\t\tif (isArray(data)) {\r\n\t\t\t//如果是数组，要重写数组的方法,7个变异方法\r\n\t\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\t\tdata.__proto__ = newArrayProtoMethods;\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 遍历对象的所有属性，对其进行劫持，重新定义属性，性能差\r\n\t */\r\n\twalk(data) {\r\n\t\t//判断是否是对象\r\n\t\tObject.keys(data).forEach((key) => {\r\n\t\t\t//对每个属性进行劫持，重新定义属性\r\n\t\t\tdefineReactive(data, key, data[key]);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 数组对象监视器,监视数组中的对象\r\n\t * @param {*} data\r\n\t */\r\n\tobserveArray(data) {\r\n\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\tdata.forEach((item) => observe(item));\r\n\t}\r\n}\r\n/**\r\n * 劫持对象的属性\r\n * 缺点：\r\n * 1.defineProperty只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n * 2.性能差，需要一上来就递归，把所有的属性都进行劫持，如果属性值是对象，还要继续递归\r\n * 3.不能对数组进行劫持，不是不能劫持，而是劫持数组会给每一个元素添加get和set，\r\n * 性能太差，并且用户修改数组一般也不是通过arr[index]来修改的，\r\n * 都是通过push、shift等方法来修改的，所以vue重写了这些方法\r\n * 4.只能对属性进行劫持，不能对整个对象进行劫持\r\n * @param {*} data\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(data, key, value) {\r\n\t//value放到闭包中，不会被销毁\r\n\t//深层劫持，如果value是对象，也要进行劫持\r\n\tlet childOb = observe(value); //childOb.dep 用来收集依赖的\r\n\r\n\tlet dep = new Dep(); //每一个属性都有dep\r\n\t//实现劫持\r\n\tObject.defineProperty(data, key, {\r\n\t\tget() {\r\n\t\t\t//收集依赖\r\n\r\n\t\t\t// console.log(\"get被调用了\");\r\n\t\t\t// console.log(\"dt\", Dep.target);\r\n\t\t\tif (Dep.target) {\r\n\t\t\t\t//记住这个属性的watcher\r\n\t\t\t\tdep.depend();\r\n\r\n\t\t\t\tif (childOb) {\r\n\t\t\t\t\t//依赖收集\r\n\t\t\t\t\tchildOb.dep.depend(); //让数组和对象本身也实现依赖收集\r\n\t\t\t\t\tif (isArray(value)) {\r\n\t\t\t\t\t\tdependArray(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\t//触发依赖更新\r\n\t\t\t//如果新值和旧值一样，直接返回\r\n\t\t\tif (newValue === value) return;\r\n\t\t\t//如果设置的值是对象，也要进行劫持\r\n\t\t\tobserve(newValue);\r\n\t\t\t//重新赋值\r\n\t\t\tvalue = newValue;\r\n\t\t\tdep.notify(); //通知更新\r\n\t\t},\r\n\t});\r\n}\r\n/**\r\n *\r\n * @param {*} data 监视器\r\n * @returns Observer实例\r\n */\r\nexport function observe(data) {\r\n\t// debugger;\r\n\t//只对对象进行劫持\r\n\tif (typeof data !== \"object\" || data == null) {\r\n\t\treturn;\r\n\t}\r\n\t//如果不是对象，就不需要监视了\r\n\tif (data.__ob__ instanceof Observer) {\r\n\t\treturn data.__ob__;\r\n\t}\r\n\r\n\t//如果一个对象被劫持过了，那就不需要再被劫持了\r\n\t//（要判断一个对象是否被劫持，可以增加一个实例，用实例来判断是否被劫持过）\r\n\treturn new Observer(data);\r\n}\r\n// 深层次嵌套会递归，递归多了性能差，不存在的属性监控不到，存在的属性要重写方法  vue3-> proxy\r\nfunction dependArray(value) {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tlet current = value[i];\r\n\t\tcurrent.__ob__ && current.__ob__.dep.depend();\r\n\t\tif (Array.isArray(current)) {\r\n\t\t\tdependArray(current);\r\n\t\t}\r\n\t}\r\n}\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n//当我们创建渲染watcher的时候我们会把当前的渲染watcher放到dep.targetget上\r\n//调用_render()会取值，走到get方法\r\nlet id = 0;\r\n//观察者模式\r\n//每个属性都有一个dep（属性是被观察者），watcher就是观察者（属性变化了会通知观察者更新）\r\nclass Watcher {\r\n\t//不同组件有不同的watcher\r\n\tconstructor(vm, fn, options) {\r\n\t\tthis.id = id++;\r\n\t\tthis.renderWatcher = options; // 是一个渲染watcher\r\n\r\n\t\tthis.depsId = new Set();\r\n\t\tthis.getter = fn; // getter意味着调用这个函数可以发生取值操作\r\n\t\tthis.deps = []; //watcher记录dep，后续实现计算属性和一些清理工作需要使用\r\n\r\n\t\tthis.lazy = options.lazy;\r\n\t\tthis.dirty = this.lazy; //缓存\r\n\t\tthis.lazy ? undefined : this.get(); //第一次的时候lazy为undefined，不会取值\r\n\t\t// this.get();\r\n\t\tthis.vm = vm;\r\n\r\n\t\tthis.value = this.lazy ? undefined : this.get();\r\n\t}\r\n\tget() {\r\n\t\tpushTarget(this);\r\n\t\t// Dep.target = this; ///添加一个静态属性,把当前watcher暴露到全局上，放到dep上\r\n\t\tlet value = this.getter.call(this.vm); //会去vm上取值  vm._update(vm._render) 取name 和age\r\n\t\t// Dep.target = null; //渲染后清空\r\n\t\tpopTarget();\r\n\t\treturn value;\r\n\t}\r\n\t//一个组件对应多个属性重复的属性也不用记录，可以利用Set去重\r\n\taddDep(dep) {\r\n\t\tlet id = dep.id;\r\n\t\tif (!this.depsId.has(id)) {\r\n\t\t\t//watcher记住dep以及depId\r\n\t\t\tthis.deps.push(dep);\r\n\t\t\tthis.depsId.add(id);\r\n\t\t\t//dep记住watcher\r\n\t\t\tdep.addSub(this);\r\n\t\t}\r\n\t}\r\n\tevaluate() {\r\n\t\tthis.value = this.get(); // 获取到用户函数的返回值 并且还要标识为脏\r\n\t\t//通过调用get把计算属性也放入队列中\r\n\t\t//该队列中的内容：渲染watcher、computed的watcher\r\n\t\tthis.dirty = false;\r\n\t}\r\n\t// watcher的depend 就是让watcher中dep去depend\r\n\tdepend() {\r\n\t\tlet i = this.deps.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tthis.deps[i].depend(); // 让计算属性watcher 也收集渲染watcher\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t// this.get(); //更新，重新渲染\r\n\t\t// console.log(\"update 被执行了\");\r\n\t\t//把多次操作，一次执行\r\n\t\tif (this.lazy) {\r\n\t\t\t// 如果是计算属性  依赖的值变化了 就标识计算属性是脏值了\r\n\t\t\tthis.dirty = true;\r\n\t\t} else {\r\n\t\t\tqueueWatcher(this); // 把当前的watcher 暂存起来\r\n\t\t\t// this.get(); // 重新渲染\r\n\t\t}\r\n\t}\r\n\trun() {\r\n\t\tthis.get();\r\n\t}\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n//利用对象去重，也可以使用set\r\n/**\r\n * 观察器队列\r\n * @param {*} watcher\r\n */\r\nfunction queueWatcher(watcher) {\r\n\t//去重\r\n\tconst id = watcher.id;\r\n\r\n\tif (!has[id]) {\r\n\t\tqueue.push(watcher);\r\n\t\thas[id] = true;\r\n\t\t//不管update执行多少次，最终只会执行一次刷新操作\r\n\r\n\t\tif (!pending) {\r\n\t\t\tnextTick(flushSchedulerQueue, 0);\r\n\t\t\t//这样直接调还有问题，就是如果用户使用的Promise的话还是不行，\r\n\t\t\t//解决办法，无论用户使用的是setTimeout，还是Promise我们统一使用nextTick包裹\r\n\r\n\t\t\tpending = true;\r\n\t\t}\r\n\t}\r\n}\r\nlet callbacks = [];\r\nlet waiting = false;\r\n/**\r\n * nextTick\r\n */\r\nexport function nextTick(cb) {\r\n\tcallbacks.push(cb); //放进去的时候是同步\r\n\tif (!waiting) {\r\n\t\t//真实的vue代码中并没有直接采用setTimeout方法来实现，而是采用优雅降级的方式\r\n\t\t//vue代码中内部先采用Promise（IE不兼容），然后使用HTML5的APIMutationObserver，如果还不兼容，\r\n\t\t//使用IE专享的setImmediate，再降级使用setTimeout\r\n\t\t/* setTimeout(() => {\r\n\t\t\t//刷新是异步\r\n\t\t\ttimerFunction(flushCallbacks);\r\n\t\t}, 0); */\r\n\t\ttimerFunc();\r\n\t\t// Promise.resolve().then(flushCallbacks)\r\n\t\twaiting = true;\r\n\t}\r\n}\r\n\r\nlet timerFunc;\r\nif (Promise) {\r\n\ttimerFunc = () => {\r\n\t\tPromise.resolve().then(flushCallbacks);\r\n\t};\r\n} else if (MutationObserver) {\r\n\tlet observer = new MutationObserver(flushCallbacks);\r\n\t// 这里传入的回调是异步执行的\r\n\tlet textNode = document.createTextNode(1);\r\n\tobserver.observe(textNode, {\r\n\t\tcharacterData: true,\r\n\t});\r\n\ttimerFunc = () => {\r\n\t\ttextNode.textContent = 2;\r\n\t};\r\n} else if (setImmediate) {\r\n\ttimerFunc = () => {\r\n\t\tsetImmediate(flushCallbacks);\r\n\t};\r\n} else {\r\n\ttimerFunc = () => {\r\n\t\tsetTimeout(flushCallbacks);\r\n\t};\r\n}\r\n\r\nfunction flushCallbacks() {\r\n\tlet cbs = callbacks.slice(0);\r\n\twaiting = false;\r\n\tcallbacks = [];\r\n\tcbs.forEach((cb) => cb());\r\n}\r\n/**\r\n *批量指定队列中的渲染\r\n */\r\nfunction flushSchedulerQueue() {\r\n\tlet flushQueue = queue.slice(0); //在刷新的过程中，有可能会有新的放到队列，所以拷贝一份\r\n\r\n\tqueue = [];\r\n\thas = {};\r\n\tpending = false;\r\n\tflushQueue.forEach((q) => q.run());\r\n}\r\n\r\n//需要给每个属性增加一个dep，目的就是收集watcher\r\n\r\n//一个组件中，有多少个属性（n个属性会对应一个视图），n个dep对应一个watcher\r\n//一个属性对应多个视图（组件），一个dep对应多个watcher\r\n//多对多关系\r\n\r\nexport default Watcher;\r\n","import { observe } from \"./observer\";\r\nimport Watcher from \"./observer/watcher\";\r\nimport { isFunction } from \"./shared/utils\";\r\nimport { isReserved } from \"./util/lang\";\r\nimport Dep from \"./observer/dep\";\r\n//初始化状态,this是undefined\r\nexport function initState(vm) {\r\n\tconst options = vm.$options;\r\n\tif (options.data) {\r\n\t\tinitData(vm);\r\n\t} else {\r\n\t\tconst ob = observe((vm._data = {}));\r\n\t\tob && ob.vmCount++;\r\n\t}\r\n\r\n\tif (options.computed) {\r\n\t\tinitComputed(vm);\r\n\t}\r\n}\r\n\r\n//初始化data，this是undefined\r\nfunction initData(vm) {\r\n\tlet data = vm.$options.data;\r\n\t//data可能是函数，也可能是对象\r\n\tdata = isFunction(data) ? getData(data, vm) : data || {};\r\n\tvm._data = data; //data是用户返回的对象\r\n\r\n\t/* const keys = Object.keys(data);\r\n\tlet i = keys.length;\r\n\twhile (i--) {\r\n\t\tconst key = keys[i];\r\n\t\tif (isReserved(key)) {\r\n\t\t\tproxy(vm, \"_data\", key);\r\n\t\t}\r\n\t} */\r\n\t//数据劫持\r\n\tconst ob = observe(data);\r\n\tob && ob.vmCount++;\r\n\r\n\t//将data代理到vm上\r\n\tfor (let key in data) {\r\n\t\tproxy(vm, \"_data\", key);\r\n\t}\r\n}\r\n/**\r\n * 将_data上的属性代理到vm上\r\n * @param {*} vm\r\n * @param {*} target\r\n * @param {*} key\r\n */\r\nfunction proxy(vm, target, key) {\r\n\tObject.defineProperty(vm, key, {\r\n\t\tget() {\r\n\t\t\treturn vm[target][key];\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\tvm[target][key] = newValue;\r\n\t\t},\r\n\t});\r\n}\r\n\r\nexport function getData(data, vm) {\r\n\t// pushTarget();\r\n\ttry {\r\n\t\treturn data.call(vm, vm);\r\n\t} catch (e) {\r\n\t\treturn {};\r\n\t} finally {\r\n\t\t// popTarget();\r\n\t}\r\n}\r\n\r\nfunction initComputed(vm) {\r\n\tconst computed = vm.$options.computed;\r\n\tconst watchers = (vm._computedWatchers = {}); // 将计算属性watcher保存到vm上\r\n\tfor (let key in computed) {\r\n\t\tlet useDef = computed[key];\r\n\t\tlet fn = isFunction(useDef) ? useDef : useDef.get;\r\n\t\t//如果直接使用watcher会立即执行，可以传递一个lazy参数\r\n\t\twatchers[key] = new Watcher(vm, fn, { lazy: true });\r\n\t\t// 我们需要监控 计算属性中get的变化\r\n\t\t// 如果直接new Watcher 默认就会执行fn, 将属性和watcher对应起来\r\n\t\t// console.log(useDef);\r\n\t\tdefineComputed(vm, key, useDef);\r\n\t}\r\n}\r\nfunction defineComputed(target, key, useDef) {\r\n\t// const getter = isFunction(useDef) ? useDef : useDef.get;\r\n\t// console.log(\"get\", getter);\r\n\r\n\tconst setter = useDef.set || (() => {});\r\n\t// console.log(setter);\r\n\t//利用defineProperty监听，这样也实现了computed，但是没有缓存，会被反复执行，可以创建watcher\r\n\t// 可以通过实例拿到对应的属性\r\n\tObject.defineProperty(target, key, {\r\n\t\tget: createComputedGetter(key),\r\n\t\tset: setter,\r\n\t});\r\n}\r\n// 计算属性根本不会收集依赖 ，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n\t//要检测是否执行该getter\r\n\treturn function () {\r\n\t\t//这时需要拿到watcher判断lazy属性，但是无法直接拿，因为this是vm,可以把所有的计算属性保存到vm上\r\n\t\tconst watcher = this._computedWatchers[key]; //通过vm获取到对应属性的watcher\r\n\r\n\t\t// console.log(w);\r\n\t\tif (watcher.dirty) {\r\n\t\t\t//如果是脏的，就执行用户的get\r\n\t\t\twatcher.evaluate(); // 求值后 dirty变为了false ,下次就不求值了\r\n\t\t}\r\n\t\tif (Dep.target) {\r\n\t\t\t// 计算属性出栈后 还要渲染watcher， 我应该让计算属性watcher里面的属性 也去收集上一层watcher\r\n\t\t\twatcher.depend();\r\n\t\t}\r\n\t\treturn watcher.value; // 最后返回的是watcher上的值\r\n\t};\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n\t/^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n//验证正则网址https://regexper.com/\r\n\r\n/**\r\n *\r\n * {\r\n * tag:'div',//标签名\r\n * type:1,//元素类型\r\n * attrs:[{name,age,address}],//记录属性\r\n * parent:null,//记录父节点\r\n * children:[]\r\n * }\r\n */\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n\t// html最开始肯定是一个  </div>\r\n\r\n\tconst ELEMENT_TYPE = 1; //标签\r\n\tconst TEXT_TYPE = 3; //文本\r\n\tconst stack = []; // 用于存放元素的栈\r\n\tlet currentParent; // 指向的是栈中的最后一个\r\n\tlet root; // 树的根节点\r\n\r\n\t//循环解析html\r\n\twhile (html) {\r\n\t\t// 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n\t\t// 如果textEnd > 0说明就是文本的结束位置\r\n\t\tlet textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n\t\tif (textEnd == 0) {\r\n\t\t\tconst startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\t// 解析到的开始标签\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//匹配结束标签\r\n\t\t\tlet endTagMatch = html.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\t//end\r\n\t\t\t\tend(endTagMatch[1]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 如果不是0 说明是文本\r\n\t\tif (textEnd > 0) {\r\n\t\t\tlet text = html.substring(0, textEnd); // 文本内容\r\n\t\t\tif (text) {\r\n\t\t\t\tchars(text);\r\n\t\t\t\tadvance(text.length);\r\n\t\t\t\t// 删除解析过的文本\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//解析开始标签\r\n\tfunction parseStartTag() {\r\n\t\tconst start = html.match(startTagOpen);\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 标签名\r\n\t\t\t\tattrs: [],\r\n\t\t\t};\r\n\t\t\t//删除解析过的标签，前进\r\n\t\t\tadvance(start[0].length);\r\n\r\n\t\t\t// 如果不是开始标签的结束 就一直匹配下去\r\n\t\t\tlet attr, end;\r\n\t\t\twhile (\r\n\t\t\t\t!(end = html.match(startTagClose)) &&\r\n\t\t\t\t(attr = html.match(attribute))\r\n\t\t\t) {\r\n\t\t\t\t//删除解析过的属性，前进\r\n\t\t\t\tadvance(attr[0].length);\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attr[1],\r\n\t\t\t\t\tvalue: attr[3] || attr[4] || attr[5] || true,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (end) {\r\n\t\t\t\t//删掉开始标签的>\r\n\t\t\t\tadvance(end[0].length);\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t}\r\n\t\treturn false; // 不是开始标签\r\n\t}\r\n\r\n\t// 利用栈型结构 来构造一颗树\r\n\t//栈中的最后一个元素是当前匹配到开始标签的父亲\r\n\tfunction start(tag, attrs) {\r\n\t\t//匹配到开始标签，创建一个栈\r\n\t\tlet node = createASTElement(tag, attrs); // 创造一个ast节点\r\n\t\tif (!root) {\r\n\t\t\t// 看一下是否是空树\r\n\t\t\troot = node; // 如果为空则当前是树的根节点\r\n\t\t}\r\n\t\tif (currentParent) {\r\n\t\t\tnode.parent = currentParent; // 只赋予了parent属性\r\n\t\t\tcurrentParent.children.push(node); // 还需要让父亲记住自己\r\n\t\t}\r\n\t\t//放入栈中\r\n\t\tstack.push(node);\r\n\t\tcurrentParent = node; // currentParent为栈中的最后一个\r\n\t}\r\n\t//解析文本\r\n\tfunction chars(text) {\r\n\t\t// 文本直接放到当前指向的节点中\r\n\t\ttext = text.replace(/\\s/g, \" \"); // 如果空格超过2就删除2个以上的\r\n\t\ttext &&\r\n\t\t\tcurrentParent.children.push({\r\n\t\t\t\ttype: TEXT_TYPE,\r\n\t\t\t\ttext,\r\n\t\t\t\tparent: currentParent,\r\n\t\t\t});\r\n\t}\r\n\t//解析结束标签\r\n\tfunction end(tag) {\r\n\t\tlet node = stack.pop(); // 弹出最后一个, 利用node还可以校验标签是否合法\r\n\t\tcurrentParent = stack[stack.length - 1];\r\n\t}\r\n\t//删除解析过的标签\r\n\tfunction advance(n) {\r\n\t\thtml = html.substring(n);\r\n\t}\r\n\r\n\t//最终需要转化成一颗抽象语法树\r\n\tfunction createASTElement(tag, attrs) {\r\n\t\treturn {\r\n\t\t\ttag,\r\n\t\t\ttype: ELEMENT_TYPE,\r\n\t\t\tchildren: [],\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t};\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\n//生成属性\r\nfunction genProps(attrs) {\r\n\tlet str = \"\"; // {name,value}\r\n\tfor (let i = 0; i < attrs.length; i++) {\r\n\t\tlet attr = attrs[i];\r\n\t\tif (attr.name === \"style\") {\r\n\t\t\t// color:red;background:red => {color:'red'}\r\n\t\t\tlet obj = {};\r\n\t\t\tattr.value.split(\";\").forEach((item) => {\r\n\t\t\t\t// qs 库\r\n\t\t\t\tlet [key, value] = item.split(\":\");\r\n\t\t\t\tobj[key] = value;\r\n\t\t\t});\r\n\t\t\tattr.value = obj;\r\n\t\t}\r\n\t\tstr += `${attr.name}:${JSON.stringify(attr.value)},`; // a:b,c:d,\r\n\t}\r\n\treturn `{${str.slice(0, -1)}}`;\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n\tif (node.type === 1) {\r\n\t\treturn codeGen(node);\r\n\t} else {\r\n\t\t// 文本\r\n\t\tlet text = node.text;\r\n\t\tif (!defaultTagRE.test(text)) {\r\n\t\t\treturn `_v(${JSON.stringify(text)})`;\r\n\t\t} else {\r\n\t\t\t//_v( _s(name)+'hello' + _s(name))\r\n\t\t\tlet tokens = [];\r\n\t\t\tlet match;\r\n\t\t\tdefaultTagRE.lastIndex = 0;\r\n\t\t\tlet lastIndex = 0;\r\n\t\t\t// split\r\n\t\t\twhile ((match = defaultTagRE.exec(text))) {\r\n\t\t\t\tlet index = match.index;\r\n\t\t\t\t// 匹配的位置  {{name}} hello  {{name}} hello\r\n\t\t\t\tif (index > lastIndex) {\r\n\t\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n\t\t\t\t}\r\n\t\t\t\ttokens.push(`_s(${match[1].trim()})`);\r\n\t\t\t\tlastIndex = index + match[0].length;\r\n\t\t\t}\r\n\t\t\tif (lastIndex < text.length) {\r\n\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex)));\r\n\t\t\t}\r\n\t\t\treturn `_v(${tokens.join(\"+\")})`;\r\n\t\t}\r\n\t}\r\n}\r\n//生成孩子\r\nfunction genChildren(children) {\r\n\treturn children.map((child) => gen(child)).join(\",\");\r\n}\r\n//代码生成\r\nfunction codeGen(ast) {\r\n\tlet children = genChildren(ast.children);\r\n\t//字符串拼接代码\r\n\tlet code = `_c('${ast.tag}',${\r\n\t\tast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n\t}${ast.children.length ? `,${children}` : \"\"})`;\r\n\r\n\treturn code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\t// 1.就是将template 转化成ast语法树\r\n\tlet ast = parseHTML(template);\r\n\r\n\t// 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\t//render(){return _c('div),{id:'app},_c('div',{style:{color:'red'}},_v())}\r\n\t// 模板引擎的实现原理 就是 with  + new Function\r\n\r\n\tlet code = codeGen(ast);\r\n\tcode = `with(this){return ${code}}`;\r\n\r\n\tlet render = new Function(code); // 根据代码生成render函数\r\n\r\n\t//  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n\treturn render;\r\n}\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa\r\n","//给构建虚拟节点提供一些方法\r\n//h(),_c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n\t//demo\r\n\tif (data == null) {\r\n\t\tdata = {};\r\n\t}\r\n\tlet key = data.key;\r\n\tif (key) {\r\n\t\tdelete data.key;\r\n\t}\r\n\treturn vnode(vm, tag, key, data, children);\r\n}\r\n\r\n//_v()\r\nexport function createTextVNode(vm, text) {\r\n\treturn vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// vnode和ast一样吗？\r\n//ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n\treturn {\r\n\t\tvm,\r\n\t\ttag,\r\n\t\tkey,\r\n\t\tdata,\r\n\t\tchildren,\r\n\t\ttext,\r\n\t\t// ....\r\n\t};\r\n}\r\n","import { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport Watcher from \"./observer/watcher\";\r\n//组件挂载\r\nexport function mountComponent(vm, el) {\r\n\t//// 这里的el 是通过querySelector处理过的\r\n\tvm.$el = el;\r\n\t//1.调用render产生虚拟dom\r\n\r\n\tconst updateComponent = () => {\r\n\t\tvm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n\t};\r\n\t// vm._update(vm._render());\r\n\t// debugger;\r\n\tconst watcher = new Watcher(vm, updateComponent, true); // true用于标识是一个渲染watcher\r\n\r\n\t// console.log(watcher);\r\n\r\n\t//2.根据虚拟dom生成真实dom\r\n\r\n\t//3.放到真实dom中\r\n}\r\n\r\n//扩展生命周期，渲染函数\r\nexport function initLifecycle(Vue) {\r\n\tVue.prototype._render = function () {\r\n\t\t// console.log(\"渲染虚拟dom\");\r\n\t\t//通过ast语法转义后生成的render方法\r\n\t\treturn this.$options.render.call(this); //_c,_v函数没有定义时调用会报错\r\n\t};\r\n\t//把VNode转换成真实dom\r\n\tVue.prototype._update = function (vnode) {\r\n\t\t// console.log(\"虚拟dom\", vnode);\r\n\t\t// console.log(\"变成真实dom\");\r\n\t\tconst vm = this;\r\n\t\tconst el = vm.$el;\r\n\r\n\t\t// patch既有初始化的功能  又有更新\r\n\t\tvm.$el = patch(el, vnode);\r\n\t};\r\n\r\n\tVue.prototype._c = function () {\r\n\t\treturn createElementVNode(this, ...arguments);\r\n\t};\r\n\tVue.prototype._v = function () {\r\n\t\treturn createTextVNode(this, ...arguments);\r\n\t};\r\n\tVue.prototype._s = function (value) {\r\n\t\tif (typeof value !== \"object\") return value;\r\n\t\treturn JSON.stringify(value);\r\n\t};\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n\t// 写的是初渲染流程\r\n\tconst isRealElement = oldVNode.nodeType;\r\n\tif (isRealElement) {\r\n\t\tconst elm = oldVNode; // 获取真实元素\r\n\t\tconst parentElm = elm.parentNode; // 拿到父元素\r\n\t\tlet newElm = createElm(vnode); //新元素\r\n\t\tparentElm.insertBefore(newElm, elm.nextSibling);\r\n\t\tparentElm.removeChild(elm); // 删除老节点\r\n\r\n\t\treturn newElm; //返回新dom\r\n\t} else {\r\n\t\t// diff算法\r\n\t}\r\n}\r\n//根据vnode创建真实元素\r\nfunction createElm(vnode) {\r\n\tlet { tag, data, children, text } = vnode;\r\n\tif (typeof tag === \"string\") {\r\n\t\t// 标签\r\n\t\tvnode.el = document.createElement(tag);\r\n\t\t// 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n\t\tpatchProps(vnode.el, data);\r\n\t\tchildren.forEach((child) => {\r\n\t\t\tvnode.el.appendChild(createElm(child));\r\n\t\t});\r\n\t} else {\r\n\t\tvnode.el = document.createTextNode(text);\r\n\t}\r\n\treturn vnode.el;\r\n}\r\n\r\n/**\r\n * 更新属性\r\n */\r\nfunction patchProps(el, props) {\r\n\tfor (let key in props) {\r\n\t\tif (key === \"style\") {\r\n\t\t\t// style{color:'red'}\r\n\t\t\tfor (let styleName in props.style) {\r\n\t\t\t\tel.style[styleName] = props.style[styleName];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tel.setAttribute(key, props[key]);\r\n\t\t}\r\n\t}\r\n}\r\n//vue核心流程：\r\n//1.创造响应式数据\r\n//2.将模板转换成ast语法树，\r\n//3.将ast语法树转换成render函数\r\n//4.后续每次更新只调用render\r\n\r\n//render会产生虚拟节点（使用响应式数据）\r\n//根据生成的虚拟节点生成真实dom\r\n","//初始化文件，用于初始化vue实例\r\nimport { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nexport function initMixins(Vue) {\r\n\tVue.prototype._init = function (options) {\r\n\t\t// vue  vm.$options 就是获取用户的配置\r\n\t\t// 我们使用的 vue的时候 $nextTick $data $attr.....\r\n\r\n\t\tconst vm = this;\r\n\t\t////把用户的配置挂载到实例上\r\n\t\tvm.$options = options;\r\n\t\t//初始化状态\r\n\t\tinitState(vm);\r\n\r\n\t\t// 如果用户传入了el属性，需要将页面渲染出来\r\n\t\tif (options.el) {\r\n\t\t\tvm.$mount(options.el);\r\n\t\t}\r\n\t};\r\n\r\n\tVue.prototype.$mount = function (el) {\r\n\t\tconst vm = this;\r\n\t\tel = document.querySelector(el);\r\n\t\tlet ops = vm.$options;\r\n\t\tif (!ops.render) {\r\n\t\t\t//先查找有没有render方法，没有render方法会采用template，template也没有就用el中的内容\r\n\t\t\tlet template;\r\n\t\t\tif (!ops.template && el) {\r\n\t\t\t\ttemplate = el.outerHTML;\r\n\t\t\t} else {\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\ttemplate = ops.template;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(template);\r\n\r\n\t\t\tif (template) {\r\n\t\t\t\t//需要将template编译成render函数\r\n\t\t\t\t//1.需要将template转换成AST语法树 -> 生成render函数 -> 生成虚拟DOM -> 真实DOM\r\n\t\t\t\t// console.log(template);\r\n\t\t\t\t// console.log(compileToFunction);\r\n\t\t\t\tconst render = compileToFunction(template);\r\n\t\t\t\tops.render = render; //jsx最终会被编译成h()函数\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//挂载，产生虚拟dom\r\n\t\tmountComponent(vm, el);\r\n\t\t//script标签引用的vue.global.js,这个编译过程是在浏览器中完成的\r\n\t\t//如果是使用webpack打包的vue,这个编译过程是在node中完成的\r\n\t\t//runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的\r\n\t};\r\n}\r\n","import { initMixins } from \"./init\";\r\nimport { initLifecycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observer/watcher\";\r\nfunction Vue(options) {\r\n\tthis._init(options); //默认调用了init\r\n}\r\nVue.prototype.$nextTick = nextTick;\r\ninitMixins(Vue); //扩展了init方法\r\ninitLifecycle(Vue);\r\nexport default Vue;\r\n"],"names":["oldArrayProtoMethods","Array","prototype","newArrayProtoMethods","Object","create","methods","forEach","method","_oldArrayProtoMethods","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","dep","notify","console","log","isFunction","val","isArray","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","__proto__","walk","keys","defineReactive","item","observe","childOb","get","dependArray","set","newValue","_typeof","i","current","Watcher","vm","fn","options","renderWatcher","depsId","Set","getter","deps","lazy","dirty","undefined","has","add","evaluate","queueWatcher","run","queue","pending","nextTick","flushSchedulerQueue","callbacks","waiting","cb","timerFunc","Promise","resolve","then","flushCallbacks","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","cbs","flushQueue","q","initState","$options","initData","_data","vmCount","computed","initComputed","getData","proxy","e","watchers","_computedWatchers","useDef","defineComputed","setter","createComputedGetter","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","text","substring","chars","attr","name","tag","node","createASTElement","parent","children","replace","type","n","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codeGen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","mountComponent","el","$el","updateComponent","_update","_render","initLifecycle","Vue","patch","_c","_v","_s","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","createElm","insertBefore","nextSibling","removeChild","createElement","patchProps","appendChild","props","styleName","style","setAttribute","initMixins","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}