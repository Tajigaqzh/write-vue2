{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/shared/utils.js","../src/observer/dep.js","../src/observer/index.js","../src/observer/watcher.js","../src/computed/index.js","../src/watch/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/util/index.js","../src/init.js","../src/utils.js","../src/gloablAPI.js","../src/index.js"],"sourcesContent":["//重写数组中的部分方法\r\nlet oldArrayProtoMethods = Array.prototype; //获取数组原型\r\nexport let newArrayProtoMethods = Object.create(oldArrayProtoMethods);\r\n//根据旧的数组原型创建新的原型\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\"];\r\n\r\n// newArrayProtoMethods.push = function (value) {};\r\nmethods.forEach((method) => {\r\n\t//重写原有的方法\r\n\tnewArrayProtoMethods[method] = function (...args) {\r\n\t\t//this就是调用的数组arr,谁调用的push方法，this就是谁\r\n\t\tconst result = oldArrayProtoMethods[method].call(this, ...args); //内部还是调用原有的方法\r\n\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\tlet inserted;\r\n\t\tlet ob = this.__ob__;\r\n\t\tswitch (method) {\r\n\t\t\tcase \"push\":\r\n\t\t\tcase \"unshift\":\r\n\t\t\t\tinserted = args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"splice\": //splice(0,1,xxx)\r\n\t\t\t\tinserted = args.slice(2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t// console.log(\"inserted\", inserted);\r\n\r\n\t\tif (inserted) {\r\n\t\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\t\tob.observeArray(inserted);\r\n\t\t}\r\n\t\t//数组变化啦通知对应的watche\r\n\t\t// debugger;\r\n\t\tob.dep.notify();\r\n\t\t// console.log(\"更新啦\", ob);\r\n\r\n\t\treturn result;\r\n\t};\r\n});\r\n","/**\r\n * 是否有自己的属性\r\n */\r\nexport function hasOwn(obj, key) {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n/**\r\n * 判断是否是函数\r\n * @param {*} val\r\n * @returns\r\n */\r\nexport function isFunction(val) {\r\n  return typeof val === \"function\";\r\n}\r\n/**\r\n * 判断是否是Array\r\n */\r\nexport const isArray = Array.isArray;\r\n\r\n/**\r\n * 判断是\r\n * @param {object} val\r\n * @returns\r\n */\r\nexport function isString(val) {\r\n  return typeof val === \"string\";\r\n}\r\n","let id = 0;\r\nclass Dep {\r\n\tconstructor() {\r\n\t\tthis.id = id++; //属性的dep收集watcher\r\n\t\tthis.subs = []; //存放着当前属性对应的watchher\r\n\t}\r\n\r\n\tdepend() {\r\n\t\t//这里不希望放重复的内容，而且只是一个单向的关系dep->watcher\r\n\t\t//让watcher记录dep，比如组件卸载，\r\n\t\t//在这里记录watcher会重复\r\n\t\t// this.subs.push(Dep.target);\r\n\t\t// console.log(\"添加后：\", this.subs);\r\n\r\n\t\tDep.target.addDep(this); // 让watcher记住dep\r\n\t}\r\n\t//dep记住watcher的方法\r\n\taddSub(watcher) {\r\n\t\tthis.subs.push(watcher);\r\n\t}\r\n\r\n\tnotify() {\r\n\t\t// console.log(\"notify被调用了\");\r\n\t\tthis.subs.forEach((watcher) => {\r\n\t\t\twatcher.update(); //告诉watcher要更新了\r\n\t\t});\r\n\t}\r\n}\r\nDep.target = null;\r\n//用于存放watcher\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n\tstack.push(watcher);\r\n\tDep.target = watcher;\r\n}\r\nexport function popTarget() {\r\n\tstack.pop();\r\n\tDep.target = stack[stack.length - 1];\r\n}\r\nexport default Dep;\r\n","//数据劫持\r\nimport { newArrayProtoMethods } from \"./array\";\r\nimport { hasOwn, isArray } from \"../shared/utils\";\r\nimport Dep from \"./dep\";\r\n\r\n/**\r\n * 用于观测的类\r\n */\r\n\r\nclass Observer {\r\n\tconstructor(data) {\r\n\t\t//给每个对象都做依赖收集\r\n\t\tthis.dep = new Dep();\r\n\t\t//Object.defineProperty()只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n\t\t//vue2为此专门写了一些API比如$set,$delete，而vue3中使用了Proxy，proxy可以监控到对象（数组）的所有属性\r\n\r\n\t\t// Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n\t\tObject.defineProperty(data, \"__ob__\", {\r\n\t\t\tvalue: this,\r\n\t\t\tenumerable: false, // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n\t\t});\r\n\t\t// data.__ob__ = this;//直接这样搞会死循环，因为observe中会判断是否已经被劫持了\r\n\r\n\t\tif (isArray(data)) {\r\n\t\t\t//如果是数组，要重写数组的方法,7个变异方法\r\n\t\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\t\tdata.__proto__ = newArrayProtoMethods;\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 遍历对象的所有属性，对其进行劫持，重新定义属性，性能差\r\n\t */\r\n\twalk(data) {\r\n\t\t//判断是否是对象\r\n\t\tObject.keys(data).forEach((key) => {\r\n\t\t\t//对每个属性进行劫持，重新定义属性\r\n\t\t\tdefineReactive(data, key, data[key]);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 数组对象监视器,监视数组中的对象\r\n\t * @param {*} data\r\n\t */\r\n\tobserveArray(data) {\r\n\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\tdata.forEach((item) => observe(item));\r\n\t}\r\n}\r\n/**\r\n * 劫持对象的属性\r\n * 缺点：\r\n * 1.defineProperty只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n * 2.性能差，需要一上来就递归，把所有的属性都进行劫持，如果属性值是对象，还要继续递归\r\n * 3.不能对数组进行劫持，不是不能劫持，而是劫持数组会给每一个元素添加get和set，\r\n * 性能太差，并且用户修改数组一般也不是通过arr[index]来修改的，\r\n * 都是通过push、shift等方法来修改的，所以vue重写了这些方法\r\n * 4.只能对属性进行劫持，不能对整个对象进行劫持\r\n * @param {*} data\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(data, key, value) {\r\n\t//value放到闭包中，不会被销毁\r\n\t//深层劫持，如果value是对象，也要进行劫持\r\n\tlet childOb = observe(value); //childOb.dep 用来收集依赖的\r\n\r\n\tlet dep = new Dep(); //每一个属性都有dep\r\n\t//实现劫持\r\n\tObject.defineProperty(data, key, {\r\n\t\tget() {\r\n\t\t\t//收集依赖\r\n\r\n\t\t\t// console.log(\"get被调用了\");\r\n\t\t\t// console.log(\"dt\", Dep.target);\r\n\t\t\tif (Dep.target) {\r\n\t\t\t\t//记住这个属性的watcher\r\n\t\t\t\tdep.depend();\r\n\r\n\t\t\t\tif (childOb) {\r\n\t\t\t\t\t//依赖收集\r\n\t\t\t\t\tchildOb.dep.depend(); //让数组和对象本身也实现依赖收集\r\n\t\t\t\t\tif (isArray(value)) {\r\n\t\t\t\t\t\tdependArray(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\t//触发依赖更新\r\n\t\t\t//如果新值和旧值一样，直接返回\r\n\t\t\tif (newValue === value) return;\r\n\t\t\t//如果设置的值是对象，也要进行劫持\r\n\t\t\tobserve(newValue);\r\n\t\t\t//重新赋值\r\n\t\t\tvalue = newValue;\r\n\t\t\tdep.notify(); //通知更新\r\n\t\t},\r\n\t});\r\n}\r\n/**\r\n *\r\n * @param {*} data 监视器\r\n * @returns Observer实例\r\n */\r\nexport function observe(data) {\r\n\t// debugger;\r\n\t//只对对象进行劫持\r\n\tif (typeof data !== \"object\" || data == null) {\r\n\t\treturn;\r\n\t}\r\n\t//如果不是对象，就不需要监视了\r\n\tif (data.__ob__ instanceof Observer) {\r\n\t\treturn data.__ob__;\r\n\t}\r\n\r\n\t//如果一个对象被劫持过了，那就不需要再被劫持了\r\n\t//（要判断一个对象是否被劫持，可以增加一个实例，用实例来判断是否被劫持过）\r\n\treturn new Observer(data);\r\n}\r\n// 深层次嵌套会递归，递归多了性能差，不存在的属性监控不到，存在的属性要重写方法  vue3-> proxy\r\nfunction dependArray(value) {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tlet current = value[i];\r\n\t\tcurrent.__ob__ && current.__ob__.dep.depend();\r\n\t\tif (Array.isArray(current)) {\r\n\t\t\tdependArray(current);\r\n\t\t}\r\n\t}\r\n}\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n//当我们创建渲染watcher的时候我们会把当前的渲染watcher放到dep.targetget上\r\n//调用_render()会取值，走到get方法\r\nlet id = 0;\r\n//观察者模式\r\n//每个属性都有一个dep（属性是被观察者），watcher就是观察者（属性变化了会通知观察者更新）\r\nclass Watcher {\r\n\t//不同组件有不同的watcher\r\n\tconstructor(vm, exprOrFn, options, cb) {\r\n\t\tthis.id = id++;\r\n\t\tthis.renderWatcher = options; // 是一个渲染watcher\r\n\r\n\t\tif (typeof exprOrFn === \"string\") {\r\n\t\t\tthis.getter = function () {\r\n\t\t\t\treturn vm[exprOrFn];\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.getter = exprOrFn; // getter意味着调用这个函数可以发生取值操作\r\n\t\t}\r\n\r\n\t\tthis.depsId = new Set();\r\n\r\n\t\tthis.deps = []; //watcher记录dep，后续实现计算属性和一些清理工作需要使用\r\n\t\tthis.cb = cb;\r\n\t\tthis.lazy = options.lazy;\r\n\t\tthis.dirty = this.lazy; //缓存\r\n\t\t// this.lazy ? undefined : this.get();\r\n\t\t// this.get();\r\n\t\tthis.vm = vm;\r\n\t\tthis.user = options.user; // 标识是否是用户自己的watcher\r\n\r\n\t\tthis.value = this.lazy ? undefined : this.get(); //第一次的时候lazy为undefined，不会取值\r\n\t}\r\n\tget() {\r\n\t\tpushTarget(this);\r\n\t\t// Dep.target = this; ///添加一个静态属性,把当前watcher暴露到全局上，放到dep上\r\n\t\tlet value = this.getter.call(this.vm); //会去vm上取值  vm._update(vm._render) 取name 和age\r\n\t\t// Dep.target = null; //渲染后清空\r\n\t\tpopTarget();\r\n\t\treturn value;\r\n\t}\r\n\t//一个组件对应多个属性重复的属性也不用记录，可以利用Set去重\r\n\taddDep(dep) {\r\n\t\tlet id = dep.id;\r\n\t\tif (!this.depsId.has(id)) {\r\n\t\t\t//watcher记住dep以及depId\r\n\t\t\tthis.deps.push(dep);\r\n\t\t\tthis.depsId.add(id);\r\n\t\t\t//dep记住watcher\r\n\t\t\tdep.addSub(this);\r\n\t\t\t// watcher已经记住了dep了而且去重了，此时让dep也记住watcher\r\n\t\t}\r\n\t}\r\n\tevaluate() {\r\n\t\tthis.value = this.get(); // 获取到用户函数的返回值 并且还要标识为脏\r\n\t\t//通过调用get把计算属性也放入队列中\r\n\t\t//该队列中的内容：渲染watcher、computed的watcher\r\n\t\tthis.dirty = false;\r\n\t}\r\n\t// watcher的depend 就是让watcher中dep去depend\r\n\tdepend() {\r\n\t\tlet i = this.deps.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tthis.deps[i].depend(); // 让计算属性watcher 也收集渲染watcher\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t// this.get(); //更新，重新渲染\r\n\t\t// console.log(\"update 被执行了\");\r\n\t\t//把多次操作，一次执行\r\n\t\tif (this.lazy) {\r\n\t\t\t// 如果是计算属性  依赖的值变化了 就标识计算属性是脏值了\r\n\t\t\tthis.dirty = true;\r\n\t\t} else {\r\n\t\t\tqueueWatcher(this); // 把当前的watcher 暂存起来\r\n\t\t\t// this.get(); // 重新渲染\r\n\t\t}\r\n\t}\r\n\trun() {\r\n\t\t//watch\r\n\t\tlet oldValue = this.value;\r\n\t\tlet newValue = this.get(); // 渲染的时候用的是最新的vm来渲染的\r\n\t\tif (this.user) {\r\n\t\t\tthis.cb.call(this.vm, newValue, oldValue);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n//利用对象去重，也可以使用set\r\n/**\r\n * 观察器队列\r\n * @param {*} watcher\r\n */\r\nfunction queueWatcher(watcher) {\r\n\t//去重\r\n\tconst id = watcher.id;\r\n\r\n\tif (!has[id]) {\r\n\t\tqueue.push(watcher);\r\n\t\thas[id] = true;\r\n\t\t//不管update执行多少次，最终只会执行一次刷新操作\r\n\r\n\t\tif (!pending) {\r\n\t\t\tnextTick(flushSchedulerQueue, 0);\r\n\t\t\t//这样直接调还有问题，就是如果用户使用的Promise的话还是不行，\r\n\t\t\t//解决办法，无论用户使用的是setTimeout，还是Promise我们统一使用nextTick包裹\r\n\r\n\t\t\tpending = true;\r\n\t\t}\r\n\t}\r\n}\r\nlet callbacks = [];\r\nlet waiting = false;\r\n/**\r\n * nextTick\r\n */\r\nexport function nextTick(cb) {\r\n\tcallbacks.push(cb); //放进去的时候是同步\r\n\tif (!waiting) {\r\n\t\t//真实的vue代码中并没有直接采用setTimeout方法来实现，而是采用优雅降级的方式\r\n\t\t//vue代码中内部先采用Promise（IE不兼容），然后使用HTML5的APIMutationObserver，如果还不兼容，\r\n\t\t//使用IE专享的setImmediate，再降级使用setTimeout\r\n\t\t/* setTimeout(() => {\r\n\t\t\t//刷新是异步\r\n\t\t\ttimerFunction(flushCallbacks);\r\n\t\t}, 0); */\r\n\t\ttimerFunc();\r\n\t\t// Promise.resolve().then(flushCallbacks)\r\n\t\twaiting = true;\r\n\t}\r\n}\r\n\r\nlet timerFunc;\r\nif (Promise) {\r\n\ttimerFunc = () => {\r\n\t\tPromise.resolve().then(flushCallbacks);\r\n\t};\r\n} else if (MutationObserver) {\r\n\tlet observer = new MutationObserver(flushCallbacks);\r\n\t// 这里传入的回调是异步执行的\r\n\tlet textNode = document.createTextNode(1);\r\n\tobserver.observe(textNode, {\r\n\t\tcharacterData: true,\r\n\t});\r\n\ttimerFunc = () => {\r\n\t\ttextNode.textContent = 2;\r\n\t};\r\n} else if (setImmediate) {\r\n\ttimerFunc = () => {\r\n\t\tsetImmediate(flushCallbacks);\r\n\t};\r\n} else {\r\n\ttimerFunc = () => {\r\n\t\tsetTimeout(flushCallbacks);\r\n\t};\r\n}\r\n\r\nfunction flushCallbacks() {\r\n\tlet cbs = callbacks.slice(0);\r\n\twaiting = false;\r\n\tcallbacks = [];\r\n\tcbs.forEach((cb) => cb());\r\n}\r\n/**\r\n *批量指定队列中的渲染\r\n */\r\nfunction flushSchedulerQueue() {\r\n\tlet flushQueue = queue.slice(0); //在刷新的过程中，有可能会有新的放到队列，所以拷贝一份\r\n\r\n\tqueue = [];\r\n\thas = {};\r\n\tpending = false;\r\n\tflushQueue.forEach((q) => q.run());\r\n}\r\n\r\n//需要给每个属性增加一个dep，目的就是收集watcher\r\n\r\n//一个组件中，有多少个属性（n个属性会对应一个视图），n个dep对应一个watcher\r\n//一个属性对应多个视图（组件），一个dep对应多个watcher\r\n//多对多关系\r\n\r\nexport default Watcher;\r\n","import { isFunction } from \"../shared/utils\";\r\nimport Dep from \"../observer/dep\";\r\nimport Watcher from \"../observer/watcher\";\r\nexport function initComputed(vm) {\r\n\tconst computed = vm.$options.computed;\r\n\tconst watchers = (vm._computedWatchers = {}); // 将计算属性watcher保存到vm上\r\n\tfor (let key in computed) {\r\n\t\tlet useDef = computed[key];\r\n\t\tlet fn = isFunction(useDef) ? useDef : useDef.get;\r\n\t\t//如果直接使用watcher会立即执行，可以传递一个lazy参数\r\n\t\twatchers[key] = new Watcher(vm, fn, { lazy: true });\r\n\t\t// 我们需要监控 计算属性中get的变化\r\n\t\t// 如果直接new Watcher 默认就会执行fn, 将属性和watcher对应起来\r\n\t\t// console.log(useDef);\r\n\t\tdefineComputed(vm, key, useDef);\r\n\t}\r\n}\r\nfunction defineComputed(target, key, useDef) {\r\n\t// const getter = isFunction(useDef) ? useDef : useDef.get;\r\n\t// console.log(\"get\", getter);\r\n\r\n\tconst setter = useDef.set || (() => {});\r\n\t// console.log(setter);\r\n\t//利用defineProperty监听，这样也实现了computed，但是没有缓存，会被反复执行，可以创建watcher\r\n\t// 可以通过实例拿到对应的属性\r\n\tObject.defineProperty(target, key, {\r\n\t\tget: createComputedGetter(key),\r\n\t\tset: setter,\r\n\t});\r\n}\r\n// 计算属性根本不会收集依赖 ，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n\t//要检测是否执行该getter\r\n\treturn function () {\r\n\t\t//这时需要拿到watcher判断lazy属性，但是无法直接拿，因为this是vm,可以把所有的计算属性保存到vm上\r\n\t\tconst watcher = this._computedWatchers[key]; //通过vm获取到对应属性的watcher\r\n\r\n\t\t// console.log(w);\r\n\t\tif (watcher.dirty) {\r\n\t\t\t//如果是脏的，就执行用户的get\r\n\t\t\twatcher.evaluate(); // 求值后 dirty变为了false ,下次就不求值了\r\n\t\t}\r\n\t\tif (Dep.target) {\r\n\t\t\t// 计算属性出栈后 还要渲染watcher， 我应该让计算属性watcher里面的属性 也去收集上一层watcher\r\n\t\t\twatcher.depend();\r\n\t\t}\r\n\t\treturn watcher.value; // 最后返回的是watcher上的值\r\n\t};\r\n}\r\n","import { isArray } from \"../shared/utils\";\r\nexport function initWatch(vm) {\r\n\tlet watch = vm.$options.watch;\r\n\tfor (let key in watch) {\r\n\t\tconst handler = watch[key]; // 字符串 数组 函数\r\n\t\tif (isArray(handler)) {\r\n\t\t\tfor (let i = 0; i < handler.length; i++) {\r\n\t\t\t\tcreateWatcher(vm, key, handler[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcreateWatcher(vm, key, handler);\r\n\t\t}\r\n\t}\r\n}\r\nfunction createWatcher(vm, key, handler) {\r\n\t// 字符串  函数\r\n\tif (typeof handler === \"string\") {\r\n\t\thandler = vm[handler];\r\n\t}\r\n\treturn vm.$watch(key, handler);\r\n}\r\n","import { observe } from \"./observer\";\r\nimport { isFunction } from \"./shared/utils\";\r\nimport { initComputed } from \"./computed/index\";\r\nimport Watcher, { nextTick } from \"./observer/watcher\";\r\nimport { initWatch } from \"./watch/index\";\r\n\r\nexport function initStateMixin(Vue) {\r\n\tVue.prototype.$nextTick = nextTick;\r\n\t// 最终调用的都是这个方法\r\n\tVue.prototype.$watch = function (exprOrFn, cb) {\r\n\t\t// firstname\r\n\t\t// ()=>vm.firstname\r\n\r\n\t\t// firstname的值变化了 直接执行cb函数即可\r\n\t\tnew Watcher(this, exprOrFn, { user: true }, cb);\r\n\t};\r\n}\r\n\r\n//初始化状态,this是undefined\r\nexport function initState(vm) {\r\n\tconst options = vm.$options;\r\n\tif (options.data) {\r\n\t\tinitData(vm);\r\n\t} else {\r\n\t\tconst ob = observe((vm._data = {}));\r\n\t\tob && ob.vmCount++;\r\n\t}\r\n\r\n\tif (options.computed) {\r\n\t\tinitComputed(vm);\r\n\t}\r\n\tif (options.watch) {\r\n\t\tinitWatch(vm);\r\n\t}\r\n}\r\n\r\n//初始化data，this是undefined\r\nfunction initData(vm) {\r\n\tlet data = vm.$options.data;\r\n\t//data可能是函数，也可能是对象\r\n\tdata = isFunction(data) ? getData(data, vm) : data || {};\r\n\tvm._data = data; //data是用户返回的对象\r\n\r\n\t/* const keys = Object.keys(data);\r\n\tlet i = keys.length;\r\n\twhile (i--) {\r\n\t\tconst key = keys[i];\r\n\t\tif (isReserved(key)) {\r\n\t\t\tproxy(vm, \"_data\", key);\r\n\t\t}\r\n\t} */\r\n\t//数据劫持\r\n\tconst ob = observe(data);\r\n\tob && ob.vmCount++;\r\n\r\n\t//将data代理到vm上\r\n\tfor (let key in data) {\r\n\t\tproxy(vm, \"_data\", key);\r\n\t}\r\n}\r\n/**\r\n * 将_data上的属性代理到vm上\r\n * @param {*} vm\r\n * @param {*} target\r\n * @param {*} key\r\n */\r\nfunction proxy(vm, target, key) {\r\n\tObject.defineProperty(vm, key, {\r\n\t\tget() {\r\n\t\t\treturn vm[target][key];\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\tvm[target][key] = newValue;\r\n\t\t},\r\n\t});\r\n}\r\n\r\nexport function getData(data, vm) {\r\n\t// pushTarget();\r\n\ttry {\r\n\t\treturn data.call(vm, vm);\r\n\t} catch (e) {\r\n\t\treturn {};\r\n\t} finally {\r\n\t\t// popTarget();\r\n\t}\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n\t/^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n//验证正则网址https://regexper.com/\r\n\r\n/**\r\n *\r\n * {\r\n * tag:'div',//标签名\r\n * type:1,//元素类型\r\n * attrs:[{name,age,address}],//记录属性\r\n * parent:null,//记录父节点\r\n * children:[]\r\n * }\r\n */\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n\t// html最开始肯定是一个  </div>\r\n\r\n\tconst ELEMENT_TYPE = 1; //标签\r\n\tconst TEXT_TYPE = 3; //文本\r\n\tconst stack = []; // 用于存放元素的栈\r\n\tlet currentParent; // 指向的是栈中的最后一个\r\n\tlet root; // 树的根节点\r\n\r\n\t//循环解析html\r\n\twhile (html) {\r\n\t\t// 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n\t\t// 如果textEnd > 0说明就是文本的结束位置\r\n\t\tlet textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n\t\tif (textEnd == 0) {\r\n\t\t\tconst startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\t// 解析到的开始标签\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//匹配结束标签\r\n\t\t\tlet endTagMatch = html.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\t//end\r\n\t\t\t\tend(endTagMatch[1]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 如果不是0 说明是文本\r\n\t\tif (textEnd > 0) {\r\n\t\t\tlet text = html.substring(0, textEnd); // 文本内容\r\n\t\t\tif (text) {\r\n\t\t\t\tchars(text);\r\n\t\t\t\tadvance(text.length);\r\n\t\t\t\t// 删除解析过的文本\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//解析开始标签\r\n\tfunction parseStartTag() {\r\n\t\tconst start = html.match(startTagOpen);\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 标签名\r\n\t\t\t\tattrs: [],\r\n\t\t\t};\r\n\t\t\t//删除解析过的标签，前进\r\n\t\t\tadvance(start[0].length);\r\n\r\n\t\t\t// 如果不是开始标签的结束 就一直匹配下去\r\n\t\t\tlet attr, end;\r\n\t\t\twhile (\r\n\t\t\t\t!(end = html.match(startTagClose)) &&\r\n\t\t\t\t(attr = html.match(attribute))\r\n\t\t\t) {\r\n\t\t\t\t//删除解析过的属性，前进\r\n\t\t\t\tadvance(attr[0].length);\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attr[1],\r\n\t\t\t\t\tvalue: attr[3] || attr[4] || attr[5] || true,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (end) {\r\n\t\t\t\t//删掉开始标签的>\r\n\t\t\t\tadvance(end[0].length);\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t}\r\n\t\treturn false; // 不是开始标签\r\n\t}\r\n\r\n\t// 利用栈型结构 来构造一颗树\r\n\t//栈中的最后一个元素是当前匹配到开始标签的父亲\r\n\tfunction start(tag, attrs) {\r\n\t\t//匹配到开始标签，创建一个栈\r\n\t\tlet node = createASTElement(tag, attrs); // 创造一个ast节点\r\n\t\tif (!root) {\r\n\t\t\t// 看一下是否是空树\r\n\t\t\troot = node; // 如果为空则当前是树的根节点\r\n\t\t}\r\n\t\tif (currentParent) {\r\n\t\t\tnode.parent = currentParent; // 只赋予了parent属性\r\n\t\t\tcurrentParent.children.push(node); // 还需要让父亲记住自己\r\n\t\t}\r\n\t\t//放入栈中\r\n\t\tstack.push(node);\r\n\t\tcurrentParent = node; // currentParent为栈中的最后一个\r\n\t}\r\n\t//解析文本\r\n\tfunction chars(text) {\r\n\t\t// 文本直接放到当前指向的节点中\r\n\t\ttext = text.replace(/\\s/g, \" \"); // 如果空格超过2就删除2个以上的\r\n\t\ttext &&\r\n\t\t\tcurrentParent.children.push({\r\n\t\t\t\ttype: TEXT_TYPE,\r\n\t\t\t\ttext,\r\n\t\t\t\tparent: currentParent,\r\n\t\t\t});\r\n\t}\r\n\t//解析结束标签\r\n\tfunction end(tag) {\r\n\t\tlet node = stack.pop(); // 弹出最后一个, 利用node还可以校验标签是否合法\r\n\t\tcurrentParent = stack[stack.length - 1];\r\n\t}\r\n\t//删除解析过的标签\r\n\tfunction advance(n) {\r\n\t\thtml = html.substring(n);\r\n\t}\r\n\r\n\t//最终需要转化成一颗抽象语法树\r\n\tfunction createASTElement(tag, attrs) {\r\n\t\treturn {\r\n\t\t\ttag,\r\n\t\t\ttype: ELEMENT_TYPE,\r\n\t\t\tchildren: [],\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t};\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\n//生成属性\r\nfunction genProps(attrs) {\r\n\tlet str = \"\"; // {name,value}\r\n\tfor (let i = 0; i < attrs.length; i++) {\r\n\t\tlet attr = attrs[i];\r\n\t\tif (attr.name === \"style\") {\r\n\t\t\t// color:red;background:red => {color:'red'}\r\n\t\t\tlet obj = {};\r\n\t\t\tattr.value.split(\";\").forEach((item) => {\r\n\t\t\t\t// qs 库\r\n\t\t\t\tlet [key, value] = item.split(\":\");\r\n\t\t\t\tobj[key] = value;\r\n\t\t\t});\r\n\t\t\tattr.value = obj;\r\n\t\t}\r\n\t\tstr += `${attr.name}:${JSON.stringify(attr.value)},`; // a:b,c:d,\r\n\t}\r\n\treturn `{${str.slice(0, -1)}}`;\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n\tif (node.type === 1) {\r\n\t\treturn codeGen(node);\r\n\t} else {\r\n\t\t// 文本\r\n\t\tlet text = node.text;\r\n\t\tif (!defaultTagRE.test(text)) {\r\n\t\t\treturn `_v(${JSON.stringify(text)})`;\r\n\t\t} else {\r\n\t\t\t//_v( _s(name)+'hello' + _s(name))\r\n\t\t\tlet tokens = [];\r\n\t\t\tlet match;\r\n\t\t\tdefaultTagRE.lastIndex = 0;\r\n\t\t\tlet lastIndex = 0;\r\n\t\t\t// split\r\n\t\t\twhile ((match = defaultTagRE.exec(text))) {\r\n\t\t\t\tlet index = match.index;\r\n\t\t\t\t// 匹配的位置  {{name}} hello  {{name}} hello\r\n\t\t\t\tif (index > lastIndex) {\r\n\t\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n\t\t\t\t}\r\n\t\t\t\ttokens.push(`_s(${match[1].trim()})`);\r\n\t\t\t\tlastIndex = index + match[0].length;\r\n\t\t\t}\r\n\t\t\tif (lastIndex < text.length) {\r\n\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex)));\r\n\t\t\t}\r\n\t\t\treturn `_v(${tokens.join(\"+\")})`;\r\n\t\t}\r\n\t}\r\n}\r\n//生成孩子\r\nfunction genChildren(children) {\r\n\treturn children.map((child) => gen(child)).join(\",\");\r\n}\r\n//代码生成\r\nfunction codeGen(ast) {\r\n\tlet children = genChildren(ast.children);\r\n\t//字符串拼接代码\r\n\tlet code = `_c('${ast.tag}',${\r\n\t\tast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n\t}${ast.children.length ? `,${children}` : \"\"})`;\r\n\r\n\treturn code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\t// 1.就是将template 转化成ast语法树\r\n\tlet ast = parseHTML(template);\r\n\r\n\t// 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\t//render(){return _c('div),{id:'app},_c('div',{style:{color:'red'}},_v())}\r\n\t// 模板引擎的实现原理 就是 with  + new Function\r\n\r\n\tlet code = codeGen(ast);\r\n\tcode = `with(this){return ${code}}`;\r\n\r\n\tlet render = new Function(code); // 根据代码生成render函数\r\n\r\n\t//  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n\treturn render;\r\n}\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa\r\n","//给构建虚拟节点提供一些方法\r\n//h(),_c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n\t//demo\r\n\tif (data == null) {\r\n\t\tdata = {};\r\n\t}\r\n\tlet key = data.key;\r\n\tif (key) {\r\n\t\tdelete data.key;\r\n\t}\r\n\treturn vnode(vm, tag, key, data, children);\r\n}\r\n\r\n//_v()\r\nexport function createTextVNode(vm, text) {\r\n\treturn vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// vnode和ast一样吗？\r\n//ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n\treturn {\r\n\t\tvm,\r\n\t\ttag,\r\n\t\tkey,\r\n\t\tdata,\r\n\t\tchildren,\r\n\t\ttext,\r\n\t\t// ....\r\n\t};\r\n}\r\nexport function isSameVnode(vnode1, vnode2) {\r\n\treturn vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n","import { isSameVnode } from \".\";\r\n\r\n//根据vnode创建真实元素\r\nexport function createElm(vnode) {\r\n\tlet { tag, data, children, text } = vnode;\r\n\tif (typeof tag === \"string\") {\r\n\t\t// 标签\r\n\t\tvnode.el = document.createElement(tag);\r\n\t\t// 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n\t\tpatchProps(vnode.el, data);\r\n\t\tchildren.forEach((child) => {\r\n\t\t\tvnode.el.appendChild(createElm(child));\r\n\t\t});\r\n\t} else {\r\n\t\tvnode.el = document.createTextNode(text);\r\n\t}\r\n\treturn vnode.el;\r\n}\r\n\r\n/**\r\n * 更新属性\r\n */\r\n// function patchProps(el, props) {\r\n// \tfor (let key in props) {\r\n// \t\tif (key === \"style\") {\r\n// \t\t\t// style{color:'red'}\r\n// \t\t\tfor (let styleName in props.style) {\r\n// \t\t\t\tel.style[styleName] = props.style[styleName];\r\n// \t\t\t}\r\n// \t\t} else {\r\n// \t\t\tel.setAttribute(key, props[key]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n\t// 老的属性中有，新的没有  要删除老的\r\n\tlet oldStyles = oldProps.style || {};\r\n\tlet newStyles = props.style || {};\r\n\tfor (let key in oldStyles) {\r\n\t\t// 老的样式中有 新的吗，没有则删除\r\n\t\tif (!newStyles[key]) {\r\n\t\t\tel.style[key] = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let key in oldProps) {\r\n\t\t// 老的属性中有\r\n\t\tif (!props[key]) {\r\n\t\t\t// 新的没有删除属性\r\n\t\t\tel.removeAttribute(key);\r\n\t\t}\r\n\t}\r\n\tfor (let key in props) {\r\n\t\t// 用新的覆盖老的\r\n\t\tif (key === \"style\") {\r\n\t\t\t// style{color:'red'}\r\n\t\t\tfor (let styleName in props.style) {\r\n\t\t\t\tel.style[styleName] = props.style[styleName];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tel.setAttribute(key, props[key]);\r\n\t\t}\r\n\t}\r\n}\r\n//vue核心流程：\r\n//1.创造响应式数据\r\n//2.将模板转换成ast语法树，\r\n//3.将ast语法树转换成render函数\r\n//4.后续每次更新只调用render\r\n\r\n//render会产生虚拟节点（使用响应式数据）\r\n//根据生成的虚拟节点生成真实dom\r\n\r\nexport function patch(oldVNode, vnode) {\r\n\t// 写的是初渲染流程\r\n\tconst isRealElement = oldVNode.nodeType;\r\n\tif (isRealElement) {\r\n\t\tconst elm = oldVNode; // 获取真实元素\r\n\t\tconst parentElm = elm.parentNode; // 拿到父元素\r\n\t\tlet newElm = createElm(vnode);\r\n\t\tparentElm.insertBefore(newElm, elm.nextSibling);\r\n\t\tparentElm.removeChild(elm); // 删除老节点\r\n\r\n\t\treturn newElm;\r\n\t} else {\r\n\t\t// 1.两个节点不是同一个节点  直接删除老的换上新的  （没有比对了）\r\n\t\t// 2.两个节点是同一个节点 (判断节点的tag和 节点的key)  比较两个节点的属性是否有差异 （复用老的节点，将差异的属性更新）\r\n\t\t// 3.节点比较完毕后就需要比较两人的儿子\r\n\t\treturn patchVnode(oldVNode, vnode);\r\n\t}\r\n}\r\n\r\nfunction patchVnode(oldVNode, vnode) {\r\n\tif (!isSameVnode(oldVNode, vnode)) {\r\n\t\t// tag == tag key === key\r\n\t\t// 用老节点的父亲 进行替换\r\n\t\tlet el = createElm(vnode);\r\n\t\toldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t// 文本的情况  文本我们期望比较一下文本的内容\r\n\tlet el = (vnode.el = oldVNode.el); // 复用老节点的元素\r\n\tif (!oldVNode.tag) {\r\n\t\t// 是文本\r\n\t\tif (oldVNode.text !== vnode.text) {\r\n\t\t\tel.textContent = vnode.text; // 用新的文本覆盖掉老的\r\n\t\t}\r\n\t}\r\n\t// 是标签   是标签我们需要比对标签的属性\r\n\tpatchProps(el, oldVNode.data, vnode.data);\r\n\r\n\t// 比较儿子节点 比较的时候 一方有儿子 一方没儿子\r\n\t//                       两方都有儿子\r\n\r\n\tlet oldChildren = oldVNode.children || [];\r\n\tlet newChildren = vnode.children || [];\r\n\r\n\tif (oldChildren.length > 0 && newChildren.length > 0) {\r\n\t\t// 完整的diff算法 需要比较两个人的儿子\r\n\t\tupdateChildren(el, oldChildren, newChildren);\r\n\t} else if (newChildren.length > 0) {\r\n\t\t// 没有老的，有新的\r\n\t\tmountChildren(el, newChildren);\r\n\t} else if (oldChildren.length > 0) {\r\n\t\t// 新的没有  老的有 要删除\r\n\t\tel.innerHTML = \"\"; // 可以循环删除\r\n\t}\r\n\treturn el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n\tfor (let i = 0; i < newChildren.length; i++) {\r\n\t\tlet child = newChildren[i];\r\n\t\tel.appendChild(createElm(child));\r\n\t}\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n\t// 我们操作列表 经常会是有  push shift pop unshift reverse sort这些方法  （针对这些情况做一个优化）\r\n\t// vue2中采用双指针的方式 比较两个节点\r\n\tlet oldStartIndex = 0;\r\n\tlet newStartIndex = 0;\r\n\tlet oldEndIndex = oldChildren.length - 1;\r\n\tlet newEndIndex = newChildren.length - 1;\r\n\r\n\tlet oldStartVnode = oldChildren[0];\r\n\tlet newStartVnode = newChildren[0];\r\n\r\n\tlet oldEndVnode = oldChildren[oldEndIndex];\r\n\tlet newEndVnode = newChildren[newEndIndex];\r\n\r\n\tfunction makeIndexByKey(children) {\r\n\t\tlet map = {};\r\n\t\tchildren.forEach((child, index) => {\r\n\t\t\tmap[child.key] = index;\r\n\t\t});\r\n\t\treturn map;\r\n\t}\r\n\r\n\tlet map = makeIndexByKey(oldChildren);\r\n\r\n\t// 循环的时候为什么要+key\r\n\twhile (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n\t\t// 有任何一个不满足则停止  || 有一个为true 就继续走\r\n\t\t// 双方有一方头指针，大于尾部指针则停止循环\r\n\t\tif (!oldStartVnode) {\r\n\t\t\toldStartVnode = oldChildren[++oldStartIndex];\r\n\t\t} else if (!oldEndVnode) {\r\n\t\t\toldEndVnode = oldChildren[--oldEndIndex];\r\n\t\t} else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n\t\t\tpatchVnode(oldStartVnode, newStartVnode); // 如果是相同节点 则递归比较子节点\r\n\t\t\toldStartVnode = oldChildren[++oldStartIndex];\r\n\t\t\tnewStartVnode = newChildren[++newStartIndex];\r\n\t\t\t// 比较开头节点\r\n\t\t} else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n\t\t\tpatchVnode(oldEndVnode, newEndVnode); // 如果是相同节点 则递归比较子节点\r\n\t\t\toldEndVnode = oldChildren[--oldEndIndex];\r\n\t\t\tnewEndVnode = newChildren[--newEndIndex];\r\n\t\t\t// 比较开头节点\r\n\t\t} else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n\t\t\tpatchVnode(oldEndVnode, newStartVnode);\r\n\t\t\t// insertBefore 具备移动性 会将原来的元素移动走\r\n\t\t\tel.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将老的尾巴移动到老的前面去\r\n\t\t\toldEndVnode = oldChildren[--oldEndIndex];\r\n\t\t\tnewStartVnode = newChildren[++newStartIndex];\r\n\t\t} else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n\t\t\tpatchVnode(oldStartVnode, newEndVnode);\r\n\t\t\t// insertBefore 具备移动性 会将原来的元素移动走\r\n\t\t\tel.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); // 将老的尾巴移动到老的前面去\r\n\t\t\toldStartVnode = oldChildren[++oldStartIndex];\r\n\t\t\tnewEndVnode = newChildren[--newEndIndex];\r\n\t\t} else {\r\n\t\t\t// 在给动态列表添加key的时候 要尽量避免用索引，因为索引前后都是从0 开始 ， 可能会发生错误复用\r\n\t\t\t// 乱序比对\r\n\t\t\t// 根据老的列表做一个映射关系 ，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n\t\t\tlet moveIndex = map[newStartVnode.key]; // 如果拿到则说明是我要移动的索引\r\n\t\t\tif (moveIndex !== undefined) {\r\n\t\t\t\tlet moveVnode = oldChildren[moveIndex]; // 找到对应的虚拟节点 复用\r\n\t\t\t\tel.insertBefore(moveVnode.el, oldStartVnode.el);\r\n\t\t\t\toldChildren[moveIndex] = undefined; // 表示这个节点已经移动走了\r\n\t\t\t\tpatchVnode(moveVnode, newStartVnode); // 比对属性和子节点\r\n\t\t\t} else {\r\n\t\t\t\tel.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n\t\t\t}\r\n\t\t\tnewStartVnode = newChildren[++newStartIndex];\r\n\t\t}\r\n\t}\r\n\tif (newStartIndex <= newEndIndex) {\r\n\t\t// 新的多了 多余的就插入进去\r\n\t\tfor (let i = newStartIndex; i <= newEndIndex; i++) {\r\n\t\t\tlet childEl = createElm(newChildren[i]);\r\n\t\t\t// 这里可能是像后追加 ，还有可能是向前追加\r\n\t\t\tlet anchor = newChildren[newEndIndex + 1]\r\n\t\t\t\t? newChildren[newEndIndex + 1].el\r\n\t\t\t\t: null; // 获取下一个元素\r\n\t\t\t// el.appendChild(childEl);\r\n\t\t\tel.insertBefore(childEl, anchor); // anchor 为null的时候则会认为是appendChild\r\n\t\t}\r\n\t}\r\n\r\n\tif (oldStartIndex <= oldEndIndex) {\r\n\t\t// 老的对了，需要删除老的\r\n\t\tfor (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n\t\t\tif (oldChildren[i]) {\r\n\t\t\t\tlet childEl = oldChildren[i].el;\r\n\t\t\t\tel.removeChild(childEl);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 我们为了 比较两个儿子的时候 ，增高性能 我们会有一些优化手段\r\n\t// 如果批量像页面中修改出入内容 浏览器会自动优化\r\n}\r\n","import { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport Watcher from \"./observer/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n//扩展生命周期，渲染函数\r\nexport function initLifecycle(Vue) {\r\n\tVue.prototype._render = function () {\r\n\t\t// console.log(\"渲染虚拟dom\");\r\n\t\t//通过ast语法转义后生成的render方法\r\n\t\treturn this.$options.render.call(this); //_c,_v函数没有定义时调用会报错\r\n\t};\r\n\t//把VNode转换成真实dom\r\n\tVue.prototype._update = function (vnode) {\r\n\t\t// console.log(\"虚拟dom\", vnode);\r\n\t\t// console.log(\"变成真实dom\");\r\n\t\tconst vm = this;\r\n\t\tconst el = vm.$el;\r\n\r\n\t\t// patch既有初始化的功能  又有更新\r\n\t\tvm.$el = patch(el, vnode);\r\n\t};\r\n\r\n\tVue.prototype._c = function () {\r\n\t\treturn createElementVNode(this, ...arguments);\r\n\t};\r\n\tVue.prototype._v = function () {\r\n\t\treturn createTextVNode(this, ...arguments);\r\n\t};\r\n\tVue.prototype._s = function (value) {\r\n\t\tif (typeof value !== \"object\") return value;\r\n\t\treturn JSON.stringify(value);\r\n\t};\r\n}\r\n//组件挂载\r\nexport function mountComponent(vm, el) {\r\n\t//// 这里的el 是通过querySelector处理过的\r\n\tvm.$el = el;\r\n\t//1.调用render产生虚拟dom\r\n\r\n\tconst updateComponent = () => {\r\n\t\tvm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n\t};\r\n\t// vm._update(vm._render());\r\n\t// debugger;\r\n\tconst watcher = new Watcher(vm, updateComponent, true); // true用于标识是一个渲染watcher\r\n\r\n\t// console.log(watcher);\r\n\r\n\t//2.根据虚拟dom生成真实dom\r\n\r\n\t//3.放到真实dom中\r\n}\r\n","const strats = {};\r\nconst LIFECYCLE = [\"beforeCreate\", \"created\"];\r\nLIFECYCLE.forEach((hook) => {\r\n\tstrats[hook] = function (p, c) {\r\n\t\t//  {} {created:function(){}}   => {created:[fn]}\r\n\t\t// {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\r\n\t\tif (c) {\r\n\t\t\t// 如果儿子有 父亲有   让父亲和儿子拼在一起\r\n\t\t\tif (p) {\r\n\t\t\t\treturn p.concat(c);\r\n\t\t\t} else {\r\n\t\t\t\treturn [c]; // 儿子有父亲没有 ，则将儿子包装成数组\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn p; // 如果儿子没有则用父亲即可\r\n\t\t}\r\n\t};\r\n});\r\n\r\nexport function mergeOptions(parent, child) {\r\n\tconst options = {};\r\n\tfor (let key in parent) {\r\n\t\t// 循环老的  {}\r\n\t\tmergeField(key);\r\n\t}\r\n\tfor (let key in child) {\r\n\t\t// 循环老的   {a:1}\r\n\t\tif (!parent.hasOwnProperty(key)) {\r\n\t\t\tmergeField(key);\r\n\t\t}\r\n\t}\r\n\tfunction mergeField(key) {\r\n\t\t// 策略模式 用策略模式减少if /else\r\n\t\tif (strats[key]) {\r\n\t\t\toptions[key] = strats[key](parent[key], child[key]);\r\n\t\t} else {\r\n\t\t\t// 如果不在策略中则以儿子为主\r\n\t\t\toptions[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\r\n\t\t}\r\n\t}\r\n\treturn options;\r\n}\r\n","//初始化文件，用于初始化vue实例\r\nimport { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./util\";\r\n\r\nexport function initMixins(Vue) {\r\n\tVue.prototype._init = function (options) {\r\n\t\t// vue  vm.$options 就是获取用户的配置\r\n\t\t// 我们使用的 vue的时候 $nextTick $data $attr.....\r\n\r\n\t\tconst vm = this;\r\n\t\t////把用户的配置挂载到实例上\r\n\t\t// vm.$options = options;\r\n\r\n\t\t// 我们定义的全局指令和过滤器.... 都会挂载到实力上\r\n\t\tvm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\t\t//初始化状态\r\n\t\tinitState(vm);\r\n\r\n\t\t// 如果用户传入了el属性，需要将页面渲染出来\r\n\t\tif (options.el) {\r\n\t\t\tvm.$mount(options.el);\r\n\t\t}\r\n\t};\r\n\r\n\tVue.prototype.$mount = function (el) {\r\n\t\tconst vm = this;\r\n\t\tel = document.querySelector(el);\r\n\t\tlet ops = vm.$options;\r\n\t\tif (!ops.render) {\r\n\t\t\t//先查找有没有render方法，没有render方法会采用template，template也没有就用el中的内容\r\n\t\t\tlet template;\r\n\t\t\tif (!ops.template && el) {\r\n\t\t\t\ttemplate = el.outerHTML;\r\n\t\t\t} else {\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\ttemplate = ops.template;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(template);\r\n\r\n\t\t\tif (template) {\r\n\t\t\t\t//需要将template编译成render函数\r\n\t\t\t\t//1.需要将template转换成AST语法树 -> 生成render函数 -> 生成虚拟DOM -> 真实DOM\r\n\t\t\t\t// console.log(template);\r\n\t\t\t\t// console.log(compileToFunction);\r\n\t\t\t\tconst render = compileToFunction(template);\r\n\t\t\t\tops.render = render; //jsx最终会被编译成h()函数\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//挂载，产生虚拟dom\r\n\t\tmountComponent(vm, el);\r\n\t\t//script标签引用的vue.global.js,这个编译过程是在浏览器中完成的\r\n\t\t//如果是使用webpack打包的vue,这个编译过程是在node中完成的\r\n\t\t//runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的\r\n\t};\r\n}\r\n","const strats = {};\nconst LIFECYCLE = [\n    'beforeCreate',\n    'created'\n]\nLIFECYCLE.forEach(hook => {\n    strats[hook] = function (p, c) {\n        //  {} {created:function(){}}   => {created:[fn]}\n        // {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\n        if (c) { // 如果儿子有 父亲有   让父亲和儿子拼在一起\n            if (p) {\n                return p.concat(c);\n            } else {\n                return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\n            }\n        } else {\n            return p; // 如果儿子没有则用父亲即可\n        }\n    }\n})\n\n \n\nexport function mergeOptions(parent, child) {\n    const options = {};\n    for (let key in parent) { // 循环老的  {}\n        mergeField(key);\n    }\n    for (let key in child) { // 循环老的   {a:1}\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n    function mergeField(key) {\n        // 策略模式 用策略模式减少if /else\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            // 如果不在策略中则以儿子为主\n            options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\n        }\n    }\n    return options;\n\n}","\nimport {mergeOptions} from './utils'\n\n\n\n\n\nexport function initGlobalAPI(Vue) {\n    // 静态方法\n   \n    Vue.options = {}\n    Vue.mixin = function (mixin) {\n        // 我们期望将用户的选项和 全局的options进行合并 '\n        this.options = mergeOptions(this.options, mixin);\n        return this;\n    }\n\n}","import { initMixins } from \"./init\";\r\nimport { initLifecycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\nimport { initGlobalAPI } from \"./gloablAPI\";\r\nfunction Vue(options) {\r\n\tthis._init(options); //默认调用了init\r\n}\r\n\r\ninitMixins(Vue); //扩展了init方法\r\ninitLifecycle(Vue);\r\ninitStateMixin(Vue); // 实现了nextTick $watch\r\ninitGlobalAPI(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["oldArrayProtoMethods","Array","prototype","newArrayProtoMethods","Object","create","methods","forEach","method","_oldArrayProtoMethods","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","dep","notify","isFunction","val","isArray","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","__proto__","walk","keys","defineReactive","item","observe","childOb","get","dependArray","set","newValue","_typeof","i","current","Watcher","vm","exprOrFn","options","cb","renderWatcher","getter","depsId","Set","deps","lazy","dirty","user","undefined","has","add","evaluate","queueWatcher","run","oldValue","queue","pending","nextTick","flushSchedulerQueue","callbacks","waiting","timerFunc","Promise","resolve","then","flushCallbacks","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","cbs","flushQueue","q","initComputed","computed","$options","watchers","_computedWatchers","useDef","fn","defineComputed","setter","createComputedGetter","initWatch","watch","handler","createWatcher","$watch","initStateMixin","Vue","$nextTick","initState","initData","_data","vmCount","getData","proxy","e","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","text","substring","chars","attr","name","tag","node","createASTElement","parent","children","replace","type","n","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codeGen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifecycle","_render","_update","$el","_c","_v","_s","mountComponent","updateComponent","strats","LIFECYCLE","hook","p","c","mergeOptions","mergeField","hasOwnProperty","initMixins","_init","constructor","$mount","querySelector","ops","outerHTML","initGlobalAPI","mixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EACA,IAAIA,oBAAoB,GAAGC,KAAK,CAACC,SAAS,CAAC;EACpC,IAAIC,oBAAoB,GAAGC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAAC,CAAA;EAGrE,IAAIM,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAA;EAG9EA,OAAO,CAACC,OAAO,CAAC,UAACC,MAAM,EAAK;EAE3BL,EAAAA,oBAAoB,CAACK,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,GAAAZ,IAAAA,KAAA,CAAAS,IAAA,GAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAH,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,KAAA;MAE/C,IAAMC,MAAM,GAAG,CAAAN,qBAAA,GAAAT,oBAAoB,CAACQ,MAAM,CAAC,EAACQ,IAAI,CAAAC,KAAA,CAAAR,qBAAA,EAAA,CAAC,IAAI,CAAA,CAAAS,MAAA,CAAKL,IAAI,CAAC,CAAA,CAAC;EAEhE,IAAA,IAAIM,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAQb,MAAM;EACb,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACbW,QAAAA,QAAQ,GAAGN,IAAI,CAAA;EACf,QAAA,MAAA;EACD,MAAA,KAAK,QAAQ;EACZM,QAAAA,QAAQ,GAAGN,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAAA;EACxB,QAAA,MAAA;EAIF,KAAA;EAGA,IAAA,IAAIH,QAAQ,EAAE;EAEbC,MAAAA,EAAE,CAACG,YAAY,CAACJ,QAAQ,CAAC,CAAA;EAC1B,KAAA;EAGAC,IAAAA,EAAE,CAACI,GAAG,CAACC,MAAM,EAAE,CAAA;EAGf,IAAA,OAAOV,MAAM,CAAA;KACb,CAAA;EACF,CAAC,CAAC;;EC9BK,SAASW,UAAUA,CAACC,GAAG,EAAE;IAC9B,OAAO,OAAOA,GAAG,KAAK,UAAU,CAAA;EAClC,CAAA;EAIO,IAAMC,OAAO,GAAG3B,KAAK,CAAC2B,OAAO;;ECjBpC,IAAIC,IAAE,GAAG,CAAC,CAAA;EAAC,IACLC,GAAG,GAAA,YAAA;EACR,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACb,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAC;EAChB,GAAA;EAACC,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAAI,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAC,MAAAA,GAAS;QAORN,GAAG,CAACO,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;EACzB,KAAA;EACA,GAAA,EAAA;MAAAJ,GAAA,EAAA,QAAA;EAAAC,IAAAA,KAAA,EACA,SAAAI,MAAOC,CAAAA,OAAO,EAAE;EACf,MAAA,IAAI,CAACR,IAAI,CAACS,IAAI,CAACD,OAAO,CAAC,CAAA;EACxB,KAAA;EAAC,GAAA,EAAA;MAAAN,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAV,MAAAA,GAAS;EAER,MAAA,IAAI,CAACO,IAAI,CAACzB,OAAO,CAAC,UAACiC,OAAO,EAAK;EAC9BA,QAAAA,OAAO,CAACE,MAAM,EAAE,CAAC;EAClB,OAAC,CAAC,CAAA;EACH,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAZ,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAEFA,GAAG,CAACO,MAAM,GAAG,IAAI,CAAA;EAEjB,IAAIM,KAAK,GAAG,EAAE,CAAA;EACP,SAASC,UAAUA,CAACJ,OAAO,EAAE;EACnCG,EAAAA,KAAK,CAACF,IAAI,CAACD,OAAO,CAAC,CAAA;IACnBV,GAAG,CAACO,MAAM,GAAGG,OAAO,CAAA;EACrB,CAAA;EACO,SAASK,SAASA,GAAG;IAC3BF,KAAK,CAACG,GAAG,EAAE,CAAA;IACXhB,GAAG,CAACO,MAAM,GAAGM,KAAK,CAACA,KAAK,CAAC/B,MAAM,GAAG,CAAC,CAAC,CAAA;EACrC;;ECjCA,IAIMmC,QAAQ,GAAA,YAAA;IACb,SAAAA,QAAAA,CAAYC,IAAI,EAAE;EAAAjB,IAAAA,eAAA,OAAAgB,QAAA,CAAA,CAAA;EAEjB,IAAA,IAAI,CAACvB,GAAG,GAAG,IAAIM,GAAG,EAAE,CAAA;EAKpB1B,IAAAA,MAAM,CAAC6C,cAAc,CAACD,IAAI,EAAE,QAAQ,EAAE;EACrCb,MAAAA,KAAK,EAAE,IAAI;QACXe,UAAU,EAAE,KAAK;EAClB,KAAC,CAAC,CAAA;EAGF,IAAA,IAAItB,OAAO,CAACoB,IAAI,CAAC,EAAE;QAGlBA,IAAI,CAACG,SAAS,GAAGhD,oBAAoB,CAAA;EACrC,MAAA,IAAI,CAACoB,YAAY,CAACyB,IAAI,CAAC,CAAA;EACxB,KAAC,MAAM;EACN,MAAA,IAAI,CAACI,IAAI,CAACJ,IAAI,CAAC,CAAA;EAChB,KAAA;EACD,GAAA;EACAf,EAAAA,YAAA,CAAAc,QAAA,EAAA,CAAA;MAAAb,GAAA,EAAA,MAAA;EAAAC,IAAAA,KAAA,EAGA,SAAAiB,IAAKJ,CAAAA,IAAI,EAAE;QAEV5C,MAAM,CAACiD,IAAI,CAACL,IAAI,CAAC,CAACzC,OAAO,CAAC,UAAC2B,GAAG,EAAK;UAElCoB,cAAc,CAACN,IAAI,EAAEd,GAAG,EAAEc,IAAI,CAACd,GAAG,CAAC,CAAC,CAAA;EACrC,OAAC,CAAC,CAAA;EACH,KAAA;EACA,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAC,IAAAA,KAAA,EAIA,SAAAZ,YAAayB,CAAAA,IAAI,EAAE;EAElBA,MAAAA,IAAI,CAACzC,OAAO,CAAC,UAACgD,IAAI,EAAA;UAAA,OAAKC,OAAO,CAACD,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACtC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAR,QAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAeK,SAASO,cAAcA,CAACN,IAAI,EAAEd,GAAG,EAAEC,KAAK,EAAE;EAGhD,EAAA,IAAIsB,OAAO,GAAGD,OAAO,CAACrB,KAAK,CAAC,CAAC;EAE7B,EAAA,IAAIX,GAAG,GAAG,IAAIM,GAAG,EAAE,CAAC;EAEpB1B,EAAAA,MAAM,CAAC6C,cAAc,CAACD,IAAI,EAAEd,GAAG,EAAE;MAChCwB,GAAG,EAAA,SAAAA,MAAG;QAKL,IAAI5B,GAAG,CAACO,MAAM,EAAE;UAEfb,GAAG,CAACY,MAAM,EAAE,CAAA;EAEZ,QAAA,IAAIqB,OAAO,EAAE;EAEZA,UAAAA,OAAO,CAACjC,GAAG,CAACY,MAAM,EAAE,CAAC;EACrB,UAAA,IAAIR,OAAO,CAACO,KAAK,CAAC,EAAE;cACnBwB,WAAW,CAACxB,KAAK,CAAC,CAAA;EACnB,WAAA;EACD,SAAA;EACD,OAAA;EACA,MAAA,OAAOA,KAAK,CAAA;OACZ;MACDyB,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;QAGb,IAAIA,QAAQ,KAAK1B,KAAK,EAAE,OAAA;QAExBqB,OAAO,CAACK,QAAQ,CAAC,CAAA;EAEjB1B,MAAAA,KAAK,GAAG0B,QAAQ,CAAA;EAChBrC,MAAAA,GAAG,CAACC,MAAM,EAAE,CAAC;EACd,KAAA;EACD,GAAC,CAAC,CAAA;EACH,CAAA;EAMO,SAAS+B,OAAOA,CAACR,IAAI,EAAE;IAG7B,IAAIc,OAAA,CAAOd,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE;EAC7C,IAAA,OAAA;EACD,GAAA;EAEA,EAAA,IAAIA,IAAI,CAAC3B,MAAM,YAAY0B,QAAQ,EAAE;MACpC,OAAOC,IAAI,CAAC3B,MAAM,CAAA;EACnB,GAAA;EAIA,EAAA,OAAO,IAAI0B,QAAQ,CAACC,IAAI,CAAC,CAAA;EAC1B,CAAA;EAEA,SAASW,WAAWA,CAACxB,KAAK,EAAE;EAC3B,EAAA,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5B,KAAK,CAACvB,MAAM,EAAEmD,CAAC,EAAE,EAAE;EACtC,IAAA,IAAIC,OAAO,GAAG7B,KAAK,CAAC4B,CAAC,CAAC,CAAA;MACtBC,OAAO,CAAC3C,MAAM,IAAI2C,OAAO,CAAC3C,MAAM,CAACG,GAAG,CAACY,MAAM,EAAE,CAAA;EAC7C,IAAA,IAAInC,KAAK,CAAC2B,OAAO,CAACoC,OAAO,CAAC,EAAE;QAC3BL,WAAW,CAACK,OAAO,CAAC,CAAA;EACrB,KAAA;EACD,GAAA;EACD;;ECjIA,IAAInC,EAAE,GAAG,CAAC,CAAA;EAEV,IACMoC,OAAO,GAAA,YAAA;IAEZ,SAAAA,OAAAA,CAAYC,EAAE,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,EAAE,EAAE;EAAAtC,IAAAA,eAAA,OAAAkC,OAAA,CAAA,CAAA;EACtC,IAAA,IAAI,CAACpC,EAAE,GAAGA,EAAE,EAAE,CAAA;EACd,IAAA,IAAI,CAACyC,aAAa,GAAGF,OAAO,CAAC;EAE7B,IAAA,IAAI,OAAOD,QAAQ,KAAK,QAAQ,EAAE;QACjC,IAAI,CAACI,MAAM,GAAG,YAAY;UACzB,OAAOL,EAAE,CAACC,QAAQ,CAAC,CAAA;SACnB,CAAA;EACF,KAAC,MAAM;EACN,MAAA,IAAI,CAACI,MAAM,GAAGJ,QAAQ,CAAC;EACxB,KAAA;EAEA,IAAA,IAAI,CAACK,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;EAEvB,IAAA,IAAI,CAACC,IAAI,GAAG,EAAE,CAAC;MACf,IAAI,CAACL,EAAE,GAAGA,EAAE,CAAA;EACZ,IAAA,IAAI,CAACM,IAAI,GAAGP,OAAO,CAACO,IAAI,CAAA;EACxB,IAAA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAAC;MAGvB,IAAI,CAACT,EAAE,GAAGA,EAAE,CAAA;EACZ,IAAA,IAAI,CAACW,IAAI,GAAGT,OAAO,CAACS,IAAI,CAAC;EAEzB,IAAA,IAAI,CAAC1C,KAAK,GAAG,IAAI,CAACwC,IAAI,GAAGG,SAAS,GAAG,IAAI,CAACpB,GAAG,EAAE,CAAC;EACjD,GAAA;EAACzB,EAAAA,YAAA,CAAAgC,OAAA,EAAA,CAAA;MAAA/B,GAAA,EAAA,KAAA;MAAAC,KAAA,EACD,SAAAuB,GAAAA,GAAM;QACLd,UAAU,CAAC,IAAI,CAAC,CAAA;EAEhB,MAAA,IAAIT,KAAK,GAAG,IAAI,CAACoC,MAAM,CAACvD,IAAI,CAAC,IAAI,CAACkD,EAAE,CAAC,CAAC;EAEtCrB,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOV,KAAK,CAAA;EACb,KAAA;EACA,GAAA,EAAA;MAAAD,GAAA,EAAA,QAAA;EAAAC,IAAAA,KAAA,EACA,SAAAG,MAAOd,CAAAA,GAAG,EAAE;EACX,MAAA,IAAIK,EAAE,GAAGL,GAAG,CAACK,EAAE,CAAA;QACf,IAAI,CAAC,IAAI,CAAC2C,MAAM,CAACO,GAAG,CAAClD,EAAE,CAAC,EAAE;EAEzB,QAAA,IAAI,CAAC6C,IAAI,CAACjC,IAAI,CAACjB,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAACgD,MAAM,CAACQ,GAAG,CAACnD,EAAE,CAAC,CAAA;EAEnBL,QAAAA,GAAG,CAACe,MAAM,CAAC,IAAI,CAAC,CAAA;EAEjB,OAAA;EACD,KAAA;EAAC,GAAA,EAAA;MAAAL,GAAA,EAAA,UAAA;MAAAC,KAAA,EACD,SAAA8C,QAAAA,GAAW;QACV,IAAI,CAAC9C,KAAK,GAAG,IAAI,CAACuB,GAAG,EAAE,CAAC;QAGxB,IAAI,CAACkB,KAAK,GAAG,KAAK,CAAA;EACnB,KAAA;EACA,GAAA,EAAA;MAAA1C,GAAA,EAAA,QAAA;MAAAC,KAAA,EACA,SAAAC,MAAAA,GAAS;EACR,MAAA,IAAI2B,CAAC,GAAG,IAAI,CAACW,IAAI,CAAC9D,MAAM,CAAA;QAExB,OAAOmD,CAAC,EAAE,EAAE;UACX,IAAI,CAACW,IAAI,CAACX,CAAC,CAAC,CAAC3B,MAAM,EAAE,CAAC;EACvB,OAAA;EACD,KAAA;EAAC,GAAA,EAAA;MAAAF,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAO,MAAAA,GAAS;QAIR,IAAI,IAAI,CAACiC,IAAI,EAAE;UAEd,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;EAClB,OAAC,MAAM;EACNM,QAAAA,YAAY,CAAC,IAAI,CAAC,CAAC;EAEpB,OAAA;EACD,KAAA;EAAC,GAAA,EAAA;MAAAhD,GAAA,EAAA,KAAA;MAAAC,KAAA,EACD,SAAAgD,GAAAA,GAAM;EAEL,MAAA,IAAIC,QAAQ,GAAG,IAAI,CAACjD,KAAK,CAAA;QACzB,IAAI0B,QAAQ,GAAG,IAAI,CAACH,GAAG,EAAE,CAAC;QAC1B,IAAI,IAAI,CAACmB,IAAI,EAAE;EACd,QAAA,IAAI,CAACR,EAAE,CAACrD,IAAI,CAAC,IAAI,CAACkD,EAAE,EAAEL,QAAQ,EAAEuB,QAAQ,CAAC,CAAA;EAC1C,OAAA;EACD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAnB,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGF,IAAIoB,KAAK,GAAG,EAAE,CAAA;EACd,IAAIN,GAAG,GAAG,EAAE,CAAA;EACZ,IAAIO,OAAO,GAAG,KAAK,CAAC;EAMpB,SAASJ,YAAYA,CAAC1C,OAAO,EAAE;EAE9B,EAAA,IAAMX,EAAE,GAAGW,OAAO,CAACX,EAAE,CAAA;EAErB,EAAA,IAAI,CAACkD,GAAG,CAAClD,EAAE,CAAC,EAAE;EACbwD,IAAAA,KAAK,CAAC5C,IAAI,CAACD,OAAO,CAAC,CAAA;EACnBuC,IAAAA,GAAG,CAAClD,EAAE,CAAC,GAAG,IAAI,CAAA;MAGd,IAAI,CAACyD,OAAO,EAAE;EACbC,MAAAA,QAAQ,CAACC,mBAAsB,CAAC,CAAA;EAIhCF,MAAAA,OAAO,GAAG,IAAI,CAAA;EACf,KAAA;EACD,GAAA;EACD,CAAA;EACA,IAAIG,SAAS,GAAG,EAAE,CAAA;EAClB,IAAIC,OAAO,GAAG,KAAK,CAAA;EAIZ,SAASH,QAAQA,CAAClB,EAAE,EAAE;EAC5BoB,EAAAA,SAAS,CAAChD,IAAI,CAAC4B,EAAE,CAAC,CAAC;IACnB,IAAI,CAACqB,OAAO,EAAE;EAQbC,IAAAA,SAAS,EAAE,CAAA;EAEXD,IAAAA,OAAO,GAAG,IAAI,CAAA;EACf,GAAA;EACD,CAAA;EAEA,IAAIC,SAAS,CAAA;EACb,IAAIC,OAAO,EAAE;IACZD,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACjBC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACC,cAAc,CAAC,CAAA;KACtC,CAAA;EACF,CAAC,MAAM,IAAIC,gBAAgB,EAAE;EAC5B,EAAA,IAAIC,QAAQ,GAAG,IAAID,gBAAgB,CAACD,cAAc,CAAC,CAAA;EAEnD,EAAA,IAAIG,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzCH,EAAAA,QAAQ,CAACzC,OAAO,CAAC0C,QAAQ,EAAE;EAC1BG,IAAAA,aAAa,EAAE,IAAA;EAChB,GAAC,CAAC,CAAA;IACFV,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACjBO,QAAQ,CAACI,WAAW,GAAG,CAAC,CAAA;KACxB,CAAA;EACF,CAAC,MAAM,IAAIC,YAAY,EAAE;IACxBZ,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACjBY,YAAY,CAACR,cAAc,CAAC,CAAA;KAC5B,CAAA;EACF,CAAC,MAAM;IACNJ,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACjBa,UAAU,CAACT,cAAc,CAAC,CAAA;KAC1B,CAAA;EACF,CAAA;EAEA,SAASA,cAAcA,GAAG;EACzB,EAAA,IAAIU,GAAG,GAAGhB,SAAS,CAACnE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5BoE,EAAAA,OAAO,GAAG,KAAK,CAAA;EACfD,EAAAA,SAAS,GAAG,EAAE,CAAA;EACdgB,EAAAA,GAAG,CAAClG,OAAO,CAAC,UAAC8D,EAAE,EAAA;MAAA,OAAKA,EAAE,EAAE,CAAA;KAAC,CAAA,CAAA;EAC1B,CAAA;EAIA,SAASmB,mBAAmBA,GAAG;IAC9B,IAAIkB,UAAU,GAAGrB,KAAK,CAAC/D,KAAK,CAAC,CAAC,CAAC,CAAC;EAEhC+D,EAAAA,KAAK,GAAG,EAAE,CAAA;IACVN,GAAG,GAAG,EAAE,CAAA;EACRO,EAAAA,OAAO,GAAG,KAAK,CAAA;EACfoB,EAAAA,UAAU,CAACnG,OAAO,CAAC,UAACoG,CAAC,EAAA;EAAA,IAAA,OAAKA,CAAC,CAACxB,GAAG,EAAE,CAAA;KAAC,CAAA,CAAA;EACnC;;EC/KO,SAASyB,YAAYA,CAAC1C,EAAE,EAAE;EAChC,EAAA,IAAM2C,QAAQ,GAAG3C,EAAE,CAAC4C,QAAQ,CAACD,QAAQ,CAAA;IACrC,IAAME,QAAQ,GAAI7C,EAAE,CAAC8C,iBAAiB,GAAG,EAAG,CAAC;EAC7C,EAAA,KAAK,IAAI9E,GAAG,IAAI2E,QAAQ,EAAE;EACzB,IAAA,IAAII,MAAM,GAAGJ,QAAQ,CAAC3E,GAAG,CAAC,CAAA;MAC1B,IAAIgF,EAAE,GAAGxF,UAAU,CAACuF,MAAM,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACvD,GAAG,CAAA;MAEjDqD,QAAQ,CAAC7E,GAAG,CAAC,GAAG,IAAI+B,OAAO,CAACC,EAAE,EAAEgD,EAAE,EAAE;EAAEvC,MAAAA,IAAI,EAAE,IAAA;EAAK,KAAC,CAAC,CAAA;EAInDwC,IAAAA,cAAc,CAACjD,EAAE,EAAEhC,GAAG,EAAE+E,MAAM,CAAC,CAAA;EAChC,GAAA;EACD,CAAA;EACA,SAASE,cAAcA,CAAC9E,MAAM,EAAEH,GAAG,EAAE+E,MAAM,EAAE;IAI5C,IAAMG,MAAM,GAAGH,MAAM,CAACrD,GAAG,IAAK,YAAM,EAAG,CAAA;EAIvCxD,EAAAA,MAAM,CAAC6C,cAAc,CAACZ,MAAM,EAAEH,GAAG,EAAE;EAClCwB,IAAAA,GAAG,EAAE2D,oBAAoB,CAACnF,GAAG,CAAC;EAC9B0B,IAAAA,GAAG,EAAEwD,MAAAA;EACN,GAAC,CAAC,CAAA;EACH,CAAA;EAEA,SAASC,oBAAoBA,CAACnF,GAAG,EAAE;EAElC,EAAA,OAAO,YAAY;MAElB,IAAMM,OAAO,GAAG,IAAI,CAACwE,iBAAiB,CAAC9E,GAAG,CAAC,CAAC;MAG5C,IAAIM,OAAO,CAACoC,KAAK,EAAE;EAElBpC,MAAAA,OAAO,CAACyC,QAAQ,EAAE,CAAC;EACpB,KAAA;MACA,IAAInD,GAAG,CAACO,MAAM,EAAE;QAEfG,OAAO,CAACJ,MAAM,EAAE,CAAA;EACjB,KAAA;EACA,IAAA,OAAOI,OAAO,CAACL,KAAK,CAAC;KACrB,CAAA;EACF;;EC/CO,SAASmF,SAASA,CAACpD,EAAE,EAAE;EAC7B,EAAA,IAAIqD,KAAK,GAAGrD,EAAE,CAAC4C,QAAQ,CAACS,KAAK,CAAA;EAC7B,EAAA,KAAK,IAAIrF,GAAG,IAAIqF,KAAK,EAAE;EACtB,IAAA,IAAMC,OAAO,GAAGD,KAAK,CAACrF,GAAG,CAAC,CAAC;EAC3B,IAAA,IAAIN,OAAO,CAAC4F,OAAO,CAAC,EAAE;EACrB,MAAA,KAAK,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyD,OAAO,CAAC5G,MAAM,EAAEmD,CAAC,EAAE,EAAE;UACxC0D,aAAa,CAACvD,EAAE,EAAEhC,GAAG,EAAEsF,OAAO,CAACzD,CAAC,CAAC,CAAC,CAAA;EACnC,OAAA;EACD,KAAC,MAAM;EACN0D,MAAAA,aAAa,CAACvD,EAAE,EAAEhC,GAAG,EAAEsF,OAAO,CAAC,CAAA;EAChC,KAAA;EACD,GAAA;EACD,CAAA;EACA,SAASC,aAAaA,CAACvD,EAAE,EAAEhC,GAAG,EAAEsF,OAAO,EAAE;EAExC,EAAA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;EAChCA,IAAAA,OAAO,GAAGtD,EAAE,CAACsD,OAAO,CAAC,CAAA;EACtB,GAAA;EACA,EAAA,OAAOtD,EAAE,CAACwD,MAAM,CAACxF,GAAG,EAAEsF,OAAO,CAAC,CAAA;EAC/B;;ECdO,SAASG,cAAcA,CAACC,GAAG,EAAE;EACnCA,EAAAA,GAAG,CAAC1H,SAAS,CAAC2H,SAAS,GAAGtC,QAAQ,CAAA;IAElCqC,GAAG,CAAC1H,SAAS,CAACwH,MAAM,GAAG,UAAUvD,QAAQ,EAAEE,EAAE,EAAE;EAK9C,IAAA,IAAIJ,OAAO,CAAC,IAAI,EAAEE,QAAQ,EAAE;EAAEU,MAAAA,IAAI,EAAE,IAAA;OAAM,EAAER,EAAE,CAAC,CAAA;KAC/C,CAAA;EACF,CAAA;EAGO,SAASyD,SAASA,CAAC5D,EAAE,EAAE;EAC7B,EAAA,IAAME,OAAO,GAAGF,EAAE,CAAC4C,QAAQ,CAAA;IAC3B,IAAI1C,OAAO,CAACpB,IAAI,EAAE;MACjB+E,QAAQ,CAAC7D,EAAE,CAAC,CAAA;EACb,GAAC,MAAM;MACN,IAAM9C,EAAE,GAAGoC,OAAO,CAAEU,EAAE,CAAC8D,KAAK,GAAG,EAAG,CAAC,CAAA;EACnC5G,IAAAA,EAAE,IAAIA,EAAE,CAAC6G,OAAO,EAAE,CAAA;EACnB,GAAA;IAEA,IAAI7D,OAAO,CAACyC,QAAQ,EAAE;MACrBD,YAAY,CAAC1C,EAAE,CAAC,CAAA;EACjB,GAAA;IACA,IAAIE,OAAO,CAACmD,KAAK,EAAE;MAClBD,SAAS,CAACpD,EAAE,CAAC,CAAA;EACd,GAAA;EACD,CAAA;EAGA,SAAS6D,QAAQA,CAAC7D,EAAE,EAAE;EACrB,EAAA,IAAIlB,IAAI,GAAGkB,EAAE,CAAC4C,QAAQ,CAAC9D,IAAI,CAAA;EAE3BA,EAAAA,IAAI,GAAGtB,UAAU,CAACsB,IAAI,CAAC,GAAGkF,OAAO,CAAClF,IAAI,EAAEkB,EAAE,CAAC,GAAGlB,IAAI,IAAI,EAAE,CAAA;EACxDkB,EAAAA,EAAE,CAAC8D,KAAK,GAAGhF,IAAI,CAAC;EAWhB,EAAA,IAAM5B,EAAE,GAAGoC,OAAO,CAACR,IAAI,CAAC,CAAA;EACxB5B,EAAAA,EAAE,IAAIA,EAAE,CAAC6G,OAAO,EAAE,CAAA;EAGlB,EAAA,KAAK,IAAI/F,GAAG,IAAIc,IAAI,EAAE;EACrBmF,IAAAA,KAAK,CAACjE,EAAE,EAAE,OAAO,EAAEhC,GAAG,CAAC,CAAA;EACxB,GAAA;EACD,CAAA;EAOA,SAASiG,KAAKA,CAACjE,EAAE,EAAE7B,MAAM,EAAEH,GAAG,EAAE;EAC/B9B,EAAAA,MAAM,CAAC6C,cAAc,CAACiB,EAAE,EAAEhC,GAAG,EAAE;MAC9BwB,GAAG,EAAA,SAAAA,MAAG;EACL,MAAA,OAAOQ,EAAE,CAAC7B,MAAM,CAAC,CAACH,GAAG,CAAC,CAAA;OACtB;MACD0B,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACbK,MAAAA,EAAE,CAAC7B,MAAM,CAAC,CAACH,GAAG,CAAC,GAAG2B,QAAQ,CAAA;EAC3B,KAAA;EACD,GAAC,CAAC,CAAA;EACH,CAAA;EAEO,SAASqE,OAAOA,CAAClF,IAAI,EAAEkB,EAAE,EAAE;IAEjC,IAAI;EACH,IAAA,OAAOlB,IAAI,CAAChC,IAAI,CAACkD,EAAE,EAAEA,EAAE,CAAC,CAAA;KACxB,CAAC,OAAOkE,CAAC,EAAE;EACX,IAAA,OAAO,EAAE,CAAA;EACV,GAAC,SAAS;EACT,GAAA;EAEF;;ECtFA,IAAMC,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAApH,MAAA,CAAUmH,MAAM,EAAAnH,OAAAA,CAAAA,CAAAA,MAAA,CAAQmH,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAME,YAAY,GAAG,IAAIC,MAAM,MAAAtH,MAAA,CAAMoH,YAAY,CAAE,CAAC,CAAA;EAEpD,IAAMG,MAAM,GAAG,IAAID,MAAM,SAAAtH,MAAA,CAASoH,YAAY,EAAA,QAAA,CAAQ,CAAC,CAAA;EAEvD,IAAMI,SAAS,GACd,2EAA2E,CAAC;EAE7E,IAAMC,aAAa,GAAG,YAAY,CAAC;EAgB5B,SAASC,SAASA,CAACC,IAAI,EAAE;EAG/B,EAAA,IAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,EAAA,IAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,EAAA,IAAMpG,KAAK,GAAG,EAAE,CAAC;IACjB,IAAIqG,aAAa,CAAC;IAClB,IAAIC,IAAI,CAAC;EAGT,EAAA,OAAOJ,IAAI,EAAE;MAGZ,IAAIK,OAAO,GAAGL,IAAI,CAACM,OAAO,CAAC,GAAG,CAAC,CAAC;MAChC,IAAID,OAAO,IAAI,CAAC,EAAE;EACjB,MAAA,IAAME,aAAa,GAAGC,aAAa,EAAE,CAAC;EACtC,MAAA,IAAID,aAAa,EAAE;UAElBE,KAAK,CAACF,aAAa,CAACG,OAAO,EAAEH,aAAa,CAACI,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACD,OAAA;EAEA,MAAA,IAAIC,WAAW,GAAGZ,IAAI,CAACa,KAAK,CAACjB,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIgB,WAAW,EAAE;EAChBE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC7I,MAAM,CAAC,CAAA;EAE9BgJ,QAAAA,GAAG,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACD,OAAA;EACD,KAAA;MAEA,IAAIP,OAAO,GAAG,CAAC,EAAE;QAChB,IAAIW,IAAI,GAAGhB,IAAI,CAACiB,SAAS,CAAC,CAAC,EAAEZ,OAAO,CAAC,CAAC;EACtC,MAAA,IAAIW,IAAI,EAAE;UACTE,KAAK,CAACF,IAAI,CAAC,CAAA;EACXF,QAAAA,OAAO,CAACE,IAAI,CAACjJ,MAAM,CAAC,CAAA;EAErB,OAAA;EACD,KAAA;EACD,GAAA;IAEA,SAASyI,aAAaA,GAAG;EACxB,IAAA,IAAMC,KAAK,GAAGT,IAAI,CAACa,KAAK,CAACnB,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIe,KAAK,EAAE;EACV,MAAA,IAAMI,KAAK,GAAG;EACbH,QAAAA,OAAO,EAAED,KAAK,CAAC,CAAC,CAAC;EACjBE,QAAAA,KAAK,EAAE,EAAA;SACP,CAAA;EAEDG,MAAAA,OAAO,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC1I,MAAM,CAAC,CAAA;QAGxB,IAAIoJ,IAAI,EAAEJ,IAAG,CAAA;QACb,OACC,EAAEA,IAAG,GAAGf,IAAI,CAACa,KAAK,CAACf,aAAa,CAAC,CAAC,KACjCqB,IAAI,GAAGnB,IAAI,CAACa,KAAK,CAAChB,SAAS,CAAC,CAAC,EAC7B;EAEDiB,QAAAA,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAACpJ,MAAM,CAAC,CAAA;EACvB8I,QAAAA,KAAK,CAACF,KAAK,CAAC/G,IAAI,CAAC;EAChBwH,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACb7H,UAAAA,KAAK,EAAE6H,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,IAAA;EACzC,SAAC,CAAC,CAAA;EACH,OAAA;EACA,MAAA,IAAIJ,IAAG,EAAE;EAERD,QAAAA,OAAO,CAACC,IAAG,CAAC,CAAC,CAAC,CAAChJ,MAAM,CAAC,CAAA;EACvB,OAAA;EACA,MAAA,OAAO8I,KAAK,CAAA;EACb,KAAA;MACA,OAAO,KAAK,CAAC;EACd,GAAA;EAIA,EAAA,SAASJ,KAAKA,CAACY,GAAG,EAAEV,KAAK,EAAE;MAE1B,IAAIW,IAAI,GAAGC,gBAAgB,CAACF,GAAG,EAAEV,KAAK,CAAC,CAAC;MACxC,IAAI,CAACP,IAAI,EAAE;QAEVA,IAAI,GAAGkB,IAAI,CAAC;EACb,KAAA;EACA,IAAA,IAAInB,aAAa,EAAE;EAClBmB,MAAAA,IAAI,CAACE,MAAM,GAAGrB,aAAa,CAAC;QAC5BA,aAAa,CAACsB,QAAQ,CAAC7H,IAAI,CAAC0H,IAAI,CAAC,CAAC;EACnC,KAAA;EAEAxH,IAAAA,KAAK,CAACF,IAAI,CAAC0H,IAAI,CAAC,CAAA;MAChBnB,aAAa,GAAGmB,IAAI,CAAC;EACtB,GAAA;IAEA,SAASJ,KAAKA,CAACF,IAAI,EAAE;MAEpBA,IAAI,GAAGA,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAChCV,IAAAA,IAAI,IACHb,aAAa,CAACsB,QAAQ,CAAC7H,IAAI,CAAC;EAC3B+H,MAAAA,IAAI,EAAEzB,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJQ,MAAAA,MAAM,EAAErB,aAAAA;EACT,KAAC,CAAC,CAAA;EACJ,GAAA;IAEA,SAASY,GAAGA,CAACM,GAAG,EAAE;MACNvH,KAAK,CAACG,GAAG,GAAG;MACvBkG,aAAa,GAAGrG,KAAK,CAACA,KAAK,CAAC/B,MAAM,GAAG,CAAC,CAAC,CAAA;EACxC,GAAA;IAEA,SAAS+I,OAAOA,CAACc,CAAC,EAAE;EACnB5B,IAAAA,IAAI,GAAGA,IAAI,CAACiB,SAAS,CAACW,CAAC,CAAC,CAAA;EACzB,GAAA;EAGA,EAAA,SAASL,gBAAgBA,CAACF,GAAG,EAAEV,KAAK,EAAE;MACrC,OAAO;EACNU,MAAAA,GAAG,EAAHA,GAAG;EACHM,MAAAA,IAAI,EAAE1B,YAAY;EAClBwB,MAAAA,QAAQ,EAAE,EAAE;EACZd,MAAAA,KAAK,EAALA,KAAK;EACLa,MAAAA,MAAM,EAAE,IAAA;OACR,CAAA;EACF,GAAA;EAEA,EAAA,OAAOpB,IAAI,CAAA;EACZ;;ECjJA,SAASyB,QAAQA,CAAClB,KAAK,EAAE;EACxB,EAAA,IAAImB,GAAG,GAAG,EAAE,CAAC;IAAC,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACyB;EACtC,IAAA,IAAIZ,IAAI,GAAGR,KAAK,CAACzF,CAAC,CAAC,CAAA;EACnB,IAAA,IAAIiG,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;QAE1B,IAAIY,GAAG,GAAG,EAAE,CAAA;EACZb,MAAAA,IAAI,CAAC7H,KAAK,CAAC2I,KAAK,CAAC,GAAG,CAAC,CAACvK,OAAO,CAAC,UAACgD,IAAI,EAAK;EAEvC,QAAA,IAAAwH,WAAA,GAAmBxH,IAAI,CAACuH,KAAK,CAAC,GAAG,CAAC;YAAAE,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7B7I,UAAAA,GAAG,GAAA8I,YAAA,CAAA,CAAA,CAAA;EAAE7I,UAAAA,KAAK,GAAA6I,YAAA,CAAA,CAAA,CAAA,CAAA;EACfH,QAAAA,GAAG,CAAC3I,GAAG,CAAC,GAAGC,KAAK,CAAA;EACjB,OAAC,CAAC,CAAA;QACF6H,IAAI,CAAC7H,KAAK,GAAG0I,GAAG,CAAA;EACjB,KAAA;EACAF,IAAAA,GAAG,OAAAzJ,MAAA,CAAO8I,IAAI,CAACC,IAAI,OAAA/I,MAAA,CAAIgK,IAAI,CAACC,SAAS,CAACnB,IAAI,CAAC7H,KAAK,CAAC,EAAA,GAAA,CAAG,CAAC;KACrD,CAAA;EAbD,EAAA,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyF,KAAK,CAAC5I,MAAM,EAAEmD,CAAC,EAAE,EAAA;MAAA6G,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrC,OAAA1J,GAAAA,CAAAA,MAAA,CAAWyJ,GAAG,CAACrJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC5B,CAAA;EACA,IAAM8J,YAAY,GAAG,0BAA0B,CAAA;EAE/C,SAASC,GAAGA,CAAClB,IAAI,EAAE;EAClB,EAAA,IAAIA,IAAI,CAACK,IAAI,KAAK,CAAC,EAAE;MACpB,OAAOc,OAAO,CAACnB,IAAI,CAAC,CAAA;EACrB,GAAC,MAAM;EAEN,IAAA,IAAIN,IAAI,GAAGM,IAAI,CAACN,IAAI,CAAA;EACpB,IAAA,IAAI,CAACuB,YAAY,CAACG,IAAI,CAAC1B,IAAI,CAAC,EAAE;EAC7B,MAAA,OAAA,KAAA,CAAA3I,MAAA,CAAagK,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EAClC,KAAC,MAAM;QAEN,IAAI2B,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAI9B,KAAK,CAAA;QACT0B,YAAY,CAACK,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;QAEjB,OAAQ/B,KAAK,GAAG0B,YAAY,CAACM,IAAI,CAAC7B,IAAI,CAAC,EAAG;EACzC,QAAA,IAAI8B,KAAK,GAAGjC,KAAK,CAACiC,KAAK,CAAA;UAEvB,IAAIA,KAAK,GAAGF,SAAS,EAAE;EACtBD,UAAAA,MAAM,CAAC/I,IAAI,CAACyI,IAAI,CAACC,SAAS,CAACtB,IAAI,CAACvI,KAAK,CAACmK,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC1D,SAAA;EACAH,QAAAA,MAAM,CAAC/I,IAAI,CAAAvB,KAAAA,CAAAA,MAAA,CAAOwI,KAAK,CAAC,CAAC,CAAC,CAACkC,IAAI,EAAE,MAAG,CAAC,CAAA;UACrCH,SAAS,GAAGE,KAAK,GAAGjC,KAAK,CAAC,CAAC,CAAC,CAAC9I,MAAM,CAAA;EACpC,OAAA;EACA,MAAA,IAAI6K,SAAS,GAAG5B,IAAI,CAACjJ,MAAM,EAAE;EAC5B4K,QAAAA,MAAM,CAAC/I,IAAI,CAACyI,IAAI,CAACC,SAAS,CAACtB,IAAI,CAACvI,KAAK,CAACmK,SAAS,CAAC,CAAC,CAAC,CAAA;EACnD,OAAA;EACA,MAAA,OAAA,KAAA,CAAAvK,MAAA,CAAasK,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EAC9B,KAAA;EACD,GAAA;EACD,CAAA;EAEA,SAASC,WAAWA,CAACxB,QAAQ,EAAE;EAC9B,EAAA,OAAOA,QAAQ,CAACyB,GAAG,CAAC,UAACC,KAAK,EAAA;MAAA,OAAKX,GAAG,CAACW,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;EACrD,CAAA;EAEA,SAASP,OAAOA,CAACW,GAAG,EAAE;EACrB,EAAA,IAAI3B,QAAQ,GAAGwB,WAAW,CAACG,GAAG,CAAC3B,QAAQ,CAAC,CAAA;EAExC,EAAA,IAAI4B,IAAI,GAAAhL,MAAAA,CAAAA,MAAA,CAAU+K,GAAG,CAAC/B,GAAG,EAAAhJ,IAAAA,CAAAA,CAAAA,MAAA,CACxB+K,GAAG,CAACzC,KAAK,CAAC5I,MAAM,GAAG,CAAC,GAAG8J,QAAQ,CAACuB,GAAG,CAACzC,KAAK,CAAC,GAAG,MAAM,CAAAtI,CAAAA,MAAA,CACjD+K,GAAG,CAAC3B,QAAQ,CAAC1J,MAAM,GAAAM,GAAAA,CAAAA,MAAA,CAAOoJ,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EAE/C,EAAA,OAAO4B,IAAI,CAAA;EACZ,CAAA;EAEO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAE3C,EAAA,IAAIH,GAAG,GAAGrD,SAAS,CAACwD,QAAQ,CAAC,CAAA;EAM7B,EAAA,IAAIF,IAAI,GAAGZ,OAAO,CAACW,GAAG,CAAC,CAAA;EACvBC,EAAAA,IAAI,GAAAhL,oBAAAA,CAAAA,MAAA,CAAwBgL,IAAI,EAAG,GAAA,CAAA,CAAA;IAEnC,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAC;EAIhC,EAAA,OAAOG,MAAM,CAAA;EACd;;ECnFO,SAASE,kBAAkBA,CAACrI,EAAE,EAAEgG,GAAG,EAAElH,IAAI,EAAe;IAE9D,IAAIA,IAAI,IAAI,IAAI,EAAE;MACjBA,IAAI,GAAG,EAAE,CAAA;EACV,GAAA;EACA,EAAA,IAAId,GAAG,GAAGc,IAAI,CAACd,GAAG,CAAA;EAClB,EAAA,IAAIA,GAAG,EAAE;MACR,OAAOc,IAAI,CAACd,GAAG,CAAA;EAChB,GAAA;IAAC,KAAAxB,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EARmD0J,QAAQ,OAAArK,KAAA,CAAAS,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAARwJ,IAAAA,QAAQ,CAAAxJ,IAAA,GAAAH,CAAAA,CAAAA,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,GAAA;IAS5D,OAAO0L,KAAK,CAACtI,EAAE,EAAEgG,GAAG,EAAEhI,GAAG,EAAEc,IAAI,EAAEsH,QAAQ,CAAC,CAAA;EAC3C,CAAA;EAGO,SAASmC,eAAeA,CAACvI,EAAE,EAAE2F,IAAI,EAAE;EACzC,EAAA,OAAO2C,KAAK,CAACtI,EAAE,EAAEY,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE+E,IAAI,CAAC,CAAA;EACnE,CAAA;EAKA,SAAS2C,KAAKA,CAACtI,EAAE,EAAEgG,GAAG,EAAEhI,GAAG,EAAEc,IAAI,EAAEsH,QAAQ,EAAET,IAAI,EAAE;IAClD,OAAO;EACN3F,IAAAA,EAAE,EAAFA,EAAE;EACFgG,IAAAA,GAAG,EAAHA,GAAG;EACHhI,IAAAA,GAAG,EAAHA,GAAG;EACHc,IAAAA,IAAI,EAAJA,IAAI;EACJsH,IAAAA,QAAQ,EAARA,QAAQ;EACRT,IAAAA,IAAI,EAAJA,IAAAA;KAEA,CAAA;EACF,CAAA;EACO,SAAS6C,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC3C,EAAA,OAAOD,MAAM,CAACzC,GAAG,KAAK0C,MAAM,CAAC1C,GAAG,IAAIyC,MAAM,CAACzK,GAAG,KAAK0K,MAAM,CAAC1K,GAAG,CAAA;EAC9D;;EChCO,SAAS2K,SAASA,CAACL,KAAK,EAAE;EAChC,EAAA,IAAMtC,GAAG,GAA2BsC,KAAK,CAAnCtC,GAAG;MAAElH,IAAI,GAAqBwJ,KAAK,CAA9BxJ,IAAI;MAAEsH,QAAQ,GAAWkC,KAAK,CAAxBlC,QAAQ;MAAET,IAAI,GAAK2C,KAAK,CAAd3C,IAAI,CAAA;EAC/B,EAAA,IAAI,OAAOK,GAAG,KAAK,QAAQ,EAAE;MAE5BsC,KAAK,CAACM,EAAE,GAAG3G,QAAQ,CAAC4G,aAAa,CAAC7C,GAAG,CAAC,CAAA;EAEtC8C,IAAAA,UAAU,CAACR,KAAK,CAACM,EAAE,EAAE9J,IAAI,CAAC,CAAA;EAC1BsH,IAAAA,QAAQ,CAAC/J,OAAO,CAAC,UAACyL,KAAK,EAAK;QAC3BQ,KAAK,CAACM,EAAE,CAACG,WAAW,CAACJ,SAAS,CAACb,KAAK,CAAC,CAAC,CAAA;EACvC,KAAC,CAAC,CAAA;EACH,GAAC,MAAM;MACNQ,KAAK,CAACM,EAAE,GAAG3G,QAAQ,CAACC,cAAc,CAACyD,IAAI,CAAC,CAAA;EACzC,GAAA;IACA,OAAO2C,KAAK,CAACM,EAAE,CAAA;EAChB,CAAA;EAkBO,SAASE,UAAUA,CAACF,EAAE,EAA6B;EAAA,EAAA,IAA3BI,QAAQ,GAAAvM,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAmE,SAAA,GAAAnE,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAAA,EAAA,IAAEwM,KAAK,GAAAxM,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAmE,SAAA,GAAAnE,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAEvD,EAAA,IAAIyM,SAAS,GAAGF,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;EACpC,EAAA,IAAIC,SAAS,GAAGH,KAAK,CAACE,KAAK,IAAI,EAAE,CAAA;EACjC,EAAA,KAAK,IAAInL,GAAG,IAAIkL,SAAS,EAAE;EAE1B,IAAA,IAAI,CAACE,SAAS,CAACpL,GAAG,CAAC,EAAE;EACpB4K,MAAAA,EAAE,CAACO,KAAK,CAACnL,GAAG,CAAC,GAAG,EAAE,CAAA;EACnB,KAAA;EACD,GAAA;EAEA,EAAA,KAAK,IAAIA,IAAG,IAAIgL,QAAQ,EAAE;EAEzB,IAAA,IAAI,CAACC,KAAK,CAACjL,IAAG,CAAC,EAAE;EAEhB4K,MAAAA,EAAE,CAACS,eAAe,CAACrL,IAAG,CAAC,CAAA;EACxB,KAAA;EACD,GAAA;EACA,EAAA,KAAK,IAAIA,KAAG,IAAIiL,KAAK,EAAE;MAEtB,IAAIjL,KAAG,KAAK,OAAO,EAAE;EAEpB,MAAA,KAAK,IAAIsL,SAAS,IAAIL,KAAK,CAACE,KAAK,EAAE;UAClCP,EAAE,CAACO,KAAK,CAACG,SAAS,CAAC,GAAGL,KAAK,CAACE,KAAK,CAACG,SAAS,CAAC,CAAA;EAC7C,OAAA;EACD,KAAC,MAAM;QACNV,EAAE,CAACW,YAAY,CAACvL,KAAG,EAAEiL,KAAK,CAACjL,KAAG,CAAC,CAAC,CAAA;EACjC,KAAA;EACD,GAAA;EACD,CAAA;EAUO,SAASwL,KAAKA,CAACC,QAAQ,EAAEnB,KAAK,EAAE;EAEtC,EAAA,IAAMoB,aAAa,GAAGD,QAAQ,CAACE,QAAQ,CAAA;EACvC,EAAA,IAAID,aAAa,EAAE;EAClB,IAAA,IAAME,GAAG,GAAGH,QAAQ,CAAC;EACrB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAC;EACjC,IAAA,IAAIC,MAAM,GAAGpB,SAAS,CAACL,KAAK,CAAC,CAAA;MAC7BuB,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEH,GAAG,CAACK,WAAW,CAAC,CAAA;EAC/CJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAC;EAE3B,IAAA,OAAOG,MAAM,CAAA;EACd,GAAC,MAAM;EAIN,IAAA,OAAOI,UAAU,CAACV,QAAQ,EAAEnB,KAAK,CAAC,CAAA;EACnC,GAAA;EACD,CAAA;EAEA,SAAS6B,UAAUA,CAACV,QAAQ,EAAEnB,KAAK,EAAE;EACpC,EAAA,IAAI,CAACE,WAAW,CAACiB,QAAQ,EAAEnB,KAAK,CAAC,EAAE;EAGlC,IAAA,IAAIM,GAAE,GAAGD,SAAS,CAACL,KAAK,CAAC,CAAA;EACzBmB,IAAAA,QAAQ,CAACb,EAAE,CAACkB,UAAU,CAACM,YAAY,CAACxB,GAAE,EAAEa,QAAQ,CAACb,EAAE,CAAC,CAAA;EACpD,IAAA,OAAOA,GAAE,CAAA;EACV,GAAA;IAGA,IAAIA,EAAE,GAAIN,KAAK,CAACM,EAAE,GAAGa,QAAQ,CAACb,EAAG,CAAC;EAClC,EAAA,IAAI,CAACa,QAAQ,CAACzD,GAAG,EAAE;EAElB,IAAA,IAAIyD,QAAQ,CAAC9D,IAAI,KAAK2C,KAAK,CAAC3C,IAAI,EAAE;EACjCiD,MAAAA,EAAE,CAACxG,WAAW,GAAGkG,KAAK,CAAC3C,IAAI,CAAC;EAC7B,KAAA;EACD,GAAA;IAEAmD,UAAU,CAACF,EAAE,EAAEa,QAAQ,CAAC3K,IAAI,EAAEwJ,KAAK,CAACxJ,IAAI,CAAC,CAAA;EAKzC,EAAA,IAAIuL,WAAW,GAAGZ,QAAQ,CAACrD,QAAQ,IAAI,EAAE,CAAA;EACzC,EAAA,IAAIkE,WAAW,GAAGhC,KAAK,CAAClC,QAAQ,IAAI,EAAE,CAAA;IAEtC,IAAIiE,WAAW,CAAC3N,MAAM,GAAG,CAAC,IAAI4N,WAAW,CAAC5N,MAAM,GAAG,CAAC,EAAE;EAErD6N,IAAAA,cAAc,CAAC3B,EAAE,EAAEyB,WAAW,EAAEC,WAAW,CAAC,CAAA;EAC7C,GAAC,MAAM,IAAIA,WAAW,CAAC5N,MAAM,GAAG,CAAC,EAAE;EAElC8N,IAAAA,aAAa,CAAC5B,EAAE,EAAE0B,WAAW,CAAC,CAAA;EAC/B,GAAC,MAAM,IAAID,WAAW,CAAC3N,MAAM,GAAG,CAAC,EAAE;EAElCkM,IAAAA,EAAE,CAAC6B,SAAS,GAAG,EAAE,CAAC;EACnB,GAAA;EACA,EAAA,OAAO7B,EAAE,CAAA;EACV,CAAA;EAEA,SAAS4B,aAAaA,CAAC5B,EAAE,EAAE0B,WAAW,EAAE;EACvC,EAAA,KAAK,IAAIzK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyK,WAAW,CAAC5N,MAAM,EAAEmD,CAAC,EAAE,EAAE;EAC5C,IAAA,IAAIiI,KAAK,GAAGwC,WAAW,CAACzK,CAAC,CAAC,CAAA;EAC1B+I,IAAAA,EAAE,CAACG,WAAW,CAACJ,SAAS,CAACb,KAAK,CAAC,CAAC,CAAA;EACjC,GAAA;EACD,CAAA;EACA,SAASyC,cAAcA,CAAC3B,EAAE,EAAEyB,WAAW,EAAEC,WAAW,EAAE;IAGrD,IAAII,aAAa,GAAG,CAAC,CAAA;IACrB,IAAIC,aAAa,GAAG,CAAC,CAAA;EACrB,EAAA,IAAIC,WAAW,GAAGP,WAAW,CAAC3N,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAImO,WAAW,GAAGP,WAAW,CAAC5N,MAAM,GAAG,CAAC,CAAA;EAExC,EAAA,IAAIoO,aAAa,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAA;EAClC,EAAA,IAAIU,aAAa,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAA;EAElC,EAAA,IAAIU,WAAW,GAAGX,WAAW,CAACO,WAAW,CAAC,CAAA;EAC1C,EAAA,IAAIK,WAAW,GAAGX,WAAW,CAACO,WAAW,CAAC,CAAA;IAE1C,SAASK,cAAcA,CAAC9E,QAAQ,EAAE;MACjC,IAAIyB,GAAG,GAAG,EAAE,CAAA;EACZzB,IAAAA,QAAQ,CAAC/J,OAAO,CAAC,UAACyL,KAAK,EAAEL,KAAK,EAAK;EAClCI,MAAAA,GAAG,CAACC,KAAK,CAAC9J,GAAG,CAAC,GAAGyJ,KAAK,CAAA;EACvB,KAAC,CAAC,CAAA;EACF,IAAA,OAAOI,GAAG,CAAA;EACX,GAAA;EAEA,EAAA,IAAIA,GAAG,GAAGqD,cAAc,CAACb,WAAW,CAAC,CAAA;EAGrC,EAAA,OAAOK,aAAa,IAAIE,WAAW,IAAID,aAAa,IAAIE,WAAW,EAAE;MAGpE,IAAI,CAACC,aAAa,EAAE;EACnBA,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAC7C,KAAC,MAAM,IAAI,CAACM,WAAW,EAAE;EACxBA,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;OACxC,MAAM,IAAIpC,WAAW,CAACsC,aAAa,EAAEC,aAAa,CAAC,EAAE;EACrDZ,MAAAA,UAAU,CAACW,aAAa,EAAEC,aAAa,CAAC,CAAC;EACzCD,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAC5CK,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;OAE5C,MAAM,IAAInC,WAAW,CAACwC,WAAW,EAAEC,WAAW,CAAC,EAAE;EACjDd,MAAAA,UAAU,CAACa,WAAW,EAAEC,WAAW,CAAC,CAAC;EACrCD,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EACxCK,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;OAExC,MAAM,IAAIrC,WAAW,CAACwC,WAAW,EAAED,aAAa,CAAC,EAAE;EACnDZ,MAAAA,UAAU,CAACa,WAAW,EAAED,aAAa,CAAC,CAAA;EAEtCnC,MAAAA,EAAE,CAACoB,YAAY,CAACgB,WAAW,CAACpC,EAAE,EAAEkC,aAAa,CAAClC,EAAE,CAAC,CAAC;EAClDoC,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EACxCG,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;OAC5C,MAAM,IAAInC,WAAW,CAACsC,aAAa,EAAEG,WAAW,CAAC,EAAE;EACnDd,MAAAA,UAAU,CAACW,aAAa,EAAEG,WAAW,CAAC,CAAA;EAEtCrC,MAAAA,EAAE,CAACoB,YAAY,CAACc,aAAa,CAAClC,EAAE,EAAEoC,WAAW,CAACpC,EAAE,CAACqB,WAAW,CAAC,CAAC;EAC9Da,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAC5CO,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EACzC,KAAC,MAAM;QAIN,IAAIM,SAAS,GAAGtD,GAAG,CAACkD,aAAa,CAAC/M,GAAG,CAAC,CAAC;QACvC,IAAImN,SAAS,KAAKvK,SAAS,EAAE;EAC5B,QAAA,IAAIwK,SAAS,GAAGf,WAAW,CAACc,SAAS,CAAC,CAAC;UACvCvC,EAAE,CAACoB,YAAY,CAACoB,SAAS,CAACxC,EAAE,EAAEkC,aAAa,CAAClC,EAAE,CAAC,CAAA;EAC/CyB,QAAAA,WAAW,CAACc,SAAS,CAAC,GAAGvK,SAAS,CAAC;EACnCuJ,QAAAA,UAAU,CAACiB,SAAS,EAAEL,aAAa,CAAC,CAAC;EACtC,OAAC,MAAM;UACNnC,EAAE,CAACoB,YAAY,CAACrB,SAAS,CAACoC,aAAa,CAAC,EAAED,aAAa,CAAClC,EAAE,CAAC,CAAA;EAC5D,OAAA;EACAmC,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAC7C,KAAA;EACD,GAAA;IACA,IAAIA,aAAa,IAAIE,WAAW,EAAE;MAEjC,KAAK,IAAIhL,CAAC,GAAG8K,aAAa,EAAE9K,CAAC,IAAIgL,WAAW,EAAEhL,CAAC,EAAE,EAAE;QAClD,IAAIwL,OAAO,GAAG1C,SAAS,CAAC2B,WAAW,CAACzK,CAAC,CAAC,CAAC,CAAA;QAEvC,IAAIyL,MAAM,GAAGhB,WAAW,CAACO,WAAW,GAAG,CAAC,CAAC,GACtCP,WAAW,CAACO,WAAW,GAAG,CAAC,CAAC,CAACjC,EAAE,GAC/B,IAAI,CAAC;QAERA,EAAE,CAACoB,YAAY,CAACqB,OAAO,EAAEC,MAAM,CAAC,CAAC;EAClC,KAAA;EACD,GAAA;IAEA,IAAIZ,aAAa,IAAIE,WAAW,EAAE;MAEjC,KAAK,IAAI/K,EAAC,GAAG6K,aAAa,EAAE7K,EAAC,IAAI+K,WAAW,EAAE/K,EAAC,EAAE,EAAE;EAClD,MAAA,IAAIwK,WAAW,CAACxK,EAAC,CAAC,EAAE;EACnB,QAAA,IAAIwL,QAAO,GAAGhB,WAAW,CAACxK,EAAC,CAAC,CAAC+I,EAAE,CAAA;EAC/BA,QAAAA,EAAE,CAACsB,WAAW,CAACmB,QAAO,CAAC,CAAA;EACxB,OAAA;EACD,KAAA;EACD,GAAA;EAID;;ECpOO,SAASE,aAAaA,CAAC7H,GAAG,EAAE;EAClCA,EAAAA,GAAG,CAAC1H,SAAS,CAACwP,OAAO,GAAG,YAAY;MAGnC,OAAO,IAAI,CAAC5I,QAAQ,CAACuF,MAAM,CAACrL,IAAI,CAAC,IAAI,CAAC,CAAC;KACvC,CAAA;EAED4G,EAAAA,GAAG,CAAC1H,SAAS,CAACyP,OAAO,GAAG,UAAUnD,KAAK,EAAE;MAGxC,IAAMtI,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAM4I,EAAE,GAAG5I,EAAE,CAAC0L,GAAG,CAAA;MAGjB1L,EAAE,CAAC0L,GAAG,GAAGlC,KAAK,CAACZ,EAAE,EAAEN,KAAK,CAAC,CAAA;KACzB,CAAA;EAED5E,EAAAA,GAAG,CAAC1H,SAAS,CAAC2P,EAAE,GAAG,YAAY;EAC9B,IAAA,OAAOtD,kBAAkB,CAAAtL,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAC,MAAA,CAAAjB,KAAA,CAAAC,SAAA,CAAAoB,KAAA,CAAAN,IAAA,CAAKL,SAAS,CAAC,CAAA,CAAA,CAAA;KAC7C,CAAA;EACDiH,EAAAA,GAAG,CAAC1H,SAAS,CAAC4P,EAAE,GAAG,YAAY;EAC9B,IAAA,OAAOrD,eAAe,CAAAxL,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAC,MAAA,CAAAjB,KAAA,CAAAC,SAAA,CAAAoB,KAAA,CAAAN,IAAA,CAAKL,SAAS,CAAC,CAAA,CAAA,CAAA;KAC1C,CAAA;EACDiH,EAAAA,GAAG,CAAC1H,SAAS,CAAC6P,EAAE,GAAG,UAAU5N,KAAK,EAAE;EACnC,IAAA,IAAI2B,OAAA,CAAO3B,KAAK,MAAK,QAAQ,EAAE,OAAOA,KAAK,CAAA;EAC3C,IAAA,OAAO+I,IAAI,CAACC,SAAS,CAAChJ,KAAK,CAAC,CAAA;KAC5B,CAAA;EACF,CAAA;EAEO,SAAS6N,cAAcA,CAAC9L,EAAE,EAAE4I,EAAE,EAAE;IAEtC5I,EAAE,CAAC0L,GAAG,GAAG9C,EAAE,CAAA;EAGX,EAAA,IAAMmD,eAAe,GAAG,SAAlBA,eAAeA,GAAS;MAC7B/L,EAAE,CAACyL,OAAO,CAACzL,EAAE,CAACwL,OAAO,EAAE,CAAC,CAAC;KACzB,CAAA;EAGD,EAAgB,IAAIzL,OAAO,CAACC,EAAE,EAAE+L,eAAe,EAAE,IAAI,EAAE;EAOxD;;ECnDA,IAAMC,QAAM,GAAG,EAAE,CAAA;EACjB,IAAMC,WAAS,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAA;AAC7CA,aAAS,CAAC5P,OAAO,CAAC,UAAC6P,IAAI,EAAK;IAC3BF,QAAM,CAACE,IAAI,CAAC,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAG9B,IAAA,IAAIA,CAAC,EAAE;EAEN,MAAA,IAAID,CAAC,EAAE;EACN,QAAA,OAAOA,CAAC,CAACnP,MAAM,CAACoP,CAAC,CAAC,CAAA;EACnB,OAAC,MAAM;EACN,QAAA,OAAO,CAACA,CAAC,CAAC,CAAC;EACZ,OAAA;EACD,KAAC,MAAM;QACN,OAAOD,CAAC,CAAC;EACV,KAAA;KACA,CAAA;EACF,CAAC,CAAC,CAAA;EAEK,SAASE,cAAYA,CAAClG,MAAM,EAAE2B,KAAK,EAAE;IAC3C,IAAM5H,OAAO,GAAG,EAAE,CAAA;EAClB,EAAA,KAAK,IAAIlC,GAAG,IAAImI,MAAM,EAAE;MAEvBmG,UAAU,CAACtO,GAAG,CAAC,CAAA;EAChB,GAAA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAI8J,KAAK,EAAE;EAEtB,IAAA,IAAI,CAAC3B,MAAM,CAACoG,cAAc,CAACvO,IAAG,CAAC,EAAE;QAChCsO,UAAU,CAACtO,IAAG,CAAC,CAAA;EAChB,KAAA;EACD,GAAA;IACA,SAASsO,UAAUA,CAACtO,GAAG,EAAE;EAExB,IAAA,IAAIgO,QAAM,CAAChO,GAAG,CAAC,EAAE;EAChBkC,MAAAA,OAAO,CAAClC,GAAG,CAAC,GAAGgO,QAAM,CAAChO,GAAG,CAAC,CAACmI,MAAM,CAACnI,GAAG,CAAC,EAAE8J,KAAK,CAAC9J,GAAG,CAAC,CAAC,CAAA;EACpD,KAAC,MAAM;EAENkC,MAAAA,OAAO,CAAClC,GAAG,CAAC,GAAG8J,KAAK,CAAC9J,GAAG,CAAC,IAAImI,MAAM,CAACnI,GAAG,CAAC,CAAC;EAC1C,KAAA;EACD,GAAA;EACA,EAAA,OAAOkC,OAAO,CAAA;EACf;;ECnCO,SAASsM,UAAUA,CAAC9I,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAAC1H,SAAS,CAACyQ,KAAK,GAAG,UAAUvM,OAAO,EAAE;MAIxC,IAAMF,EAAE,GAAG,IAAI,CAAA;EAKfA,IAAAA,EAAE,CAAC4C,QAAQ,GAAGyJ,cAAY,CAAC,IAAI,CAACK,WAAW,CAACxM,OAAO,EAAEA,OAAO,CAAC,CAAC;MAE9D0D,SAAS,CAAC5D,EAAE,CAAC,CAAA;MAGb,IAAIE,OAAO,CAAC0I,EAAE,EAAE;EACf5I,MAAAA,EAAE,CAAC2M,MAAM,CAACzM,OAAO,CAAC0I,EAAE,CAAC,CAAA;EACtB,KAAA;KACA,CAAA;EAEDlF,EAAAA,GAAG,CAAC1H,SAAS,CAAC2Q,MAAM,GAAG,UAAU/D,EAAE,EAAE;MACpC,IAAM5I,EAAE,GAAG,IAAI,CAAA;EACf4I,IAAAA,EAAE,GAAG3G,QAAQ,CAAC2K,aAAa,CAAChE,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAIiE,GAAG,GAAG7M,EAAE,CAAC4C,QAAQ,CAAA;EACrB,IAAA,IAAI,CAACiK,GAAG,CAAC1E,MAAM,EAAE;EAEhB,MAAA,IAAID,QAAQ,CAAA;EACZ,MAAA,IAAI,CAAC2E,GAAG,CAAC3E,QAAQ,IAAIU,EAAE,EAAE;UACxBV,QAAQ,GAAGU,EAAE,CAACkE,SAAS,CAAA;EACxB,OAAC,MAAM;EACN,QAAA,IAAIlE,EAAE,EAAE;YACPV,QAAQ,GAAG2E,GAAG,CAAC3E,QAAQ,CAAA;EACxB,SAAA;EACD,OAAA;EAIA,MAAA,IAAIA,QAAQ,EAAE;EAKb,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;EAC1C2E,QAAAA,GAAG,CAAC1E,MAAM,GAAGA,MAAM,CAAC;EACrB,OAAA;EACD,KAAA;EAGA2D,IAAAA,cAAc,CAAC9L,EAAE,EAAE4I,EAAE,CAAC,CAAA;KAItB,CAAA;EACF;;EC3DA,IAAMoD,MAAM,GAAG,EAAE,CAAA;EACjB,IAAMC,SAAS,GAAG,CACd,cAAc,EACd,SAAS,CACZ,CAAA;EACDA,SAAS,CAAC5P,OAAO,CAAC,UAAA6P,IAAI,EAAI;IACtBF,MAAM,CAACE,IAAI,CAAC,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAG3B,IAAA,IAAIA,CAAC,EAAE;EACH,MAAA,IAAID,CAAC,EAAE;EACH,QAAA,OAAOA,CAAC,CAACnP,MAAM,CAACoP,CAAC,CAAC,CAAA;EACtB,OAAC,MAAM;EACH,QAAA,OAAO,CAACA,CAAC,CAAC,CAAC;EACf,OAAA;EACJ,KAAC,MAAM;QACH,OAAOD,CAAC,CAAC;EACb,KAAA;KACH,CAAA;EACL,CAAC,CAAC,CAAA;EAIK,SAASE,YAAYA,CAAClG,MAAM,EAAE2B,KAAK,EAAE;IACxC,IAAM5H,OAAO,GAAG,EAAE,CAAA;EAClB,EAAA,KAAK,IAAIlC,GAAG,IAAImI,MAAM,EAAE;MACpBmG,UAAU,CAACtO,GAAG,CAAC,CAAA;EACnB,GAAA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAI8J,KAAK,EAAE;EACnB,IAAA,IAAI,CAAC3B,MAAM,CAACoG,cAAc,CAACvO,IAAG,CAAC,EAAE;QAC7BsO,UAAU,CAACtO,IAAG,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;IACA,SAASsO,UAAUA,CAACtO,GAAG,EAAE;EAErB,IAAA,IAAIgO,MAAM,CAAChO,GAAG,CAAC,EAAE;EACbkC,MAAAA,OAAO,CAAClC,GAAG,CAAC,GAAGgO,MAAM,CAAChO,GAAG,CAAC,CAACmI,MAAM,CAACnI,GAAG,CAAC,EAAE8J,KAAK,CAAC9J,GAAG,CAAC,CAAC,CAAA;EACvD,KAAC,MAAM;EAEHkC,MAAAA,OAAO,CAAClC,GAAG,CAAC,GAAG8J,KAAK,CAAC9J,GAAG,CAAC,IAAImI,MAAM,CAACnI,GAAG,CAAC,CAAC;EAC7C,KAAA;EACJ,GAAA;EACA,EAAA,OAAOkC,OAAO,CAAA;EAElB;;ECrCO,SAAS6M,aAAaA,CAACrJ,GAAG,EAAE;EAG/BA,EAAAA,GAAG,CAACxD,OAAO,GAAG,EAAE,CAAA;EAChBwD,EAAAA,GAAG,CAACsJ,KAAK,GAAG,UAAUA,KAAK,EAAE;MAEzB,IAAI,CAAC9M,OAAO,GAAGmM,YAAY,CAAC,IAAI,CAACnM,OAAO,EAAE8M,KAAK,CAAC,CAAA;EAChD,IAAA,OAAO,IAAI,CAAA;KACd,CAAA;EAEL;;ECbA,SAAStJ,GAAGA,CAACxD,OAAO,EAAE;EACrB,EAAA,IAAI,CAACuM,KAAK,CAACvM,OAAO,CAAC,CAAC;EACrB,CAAA;EAEAsM,UAAU,CAAC9I,GAAG,CAAC,CAAC;EAChB6H,aAAa,CAAC7H,GAAG,CAAC,CAAA;EAClBD,cAAc,CAACC,GAAG,CAAC,CAAC;EACpBqJ,aAAa,CAACrJ,GAAG,CAAC;;;;;;;;"}