{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/shared/utils.js","../src/observer/dep.js","../src/observer/index.js","../src/observer/watcher.js","../src/computed/index.js","../src/watch/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/util/index.js","../src/init.js","../src/gloablAPI.js","../src/index.js"],"sourcesContent":["//重写数组中的部分方法\r\nlet oldArrayProtoMethods = Array.prototype; //获取数组原型\r\nexport let newArrayProtoMethods = Object.create(oldArrayProtoMethods);\r\n//根据旧的数组原型创建新的原型\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\"];\r\n\r\n// newArrayProtoMethods.push = function (value) {};\r\nmethods.forEach((method) => {\r\n\t//重写原有的方法\r\n\tnewArrayProtoMethods[method] = function (...args) {\r\n\t\t//this就是调用的数组arr,谁调用的push方法，this就是谁\r\n\t\tconst result = oldArrayProtoMethods[method].call(this, ...args); //内部还是调用原有的方法\r\n\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\tlet inserted;\r\n\t\tlet ob = this.__ob__;\r\n\t\tswitch (method) {\r\n\t\t\tcase \"push\":\r\n\t\t\tcase \"unshift\":\r\n\t\t\t\tinserted = args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"splice\": //splice(0,1,xxx)\r\n\t\t\t\tinserted = args.slice(2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t// console.log(\"inserted\", inserted);\r\n\r\n\t\tif (inserted) {\r\n\t\t\t//如果新增的元素是对象，还要对对象进行劫持\r\n\t\t\tob.observeArray(inserted);\r\n\t\t}\r\n\t\t//数组变化啦通知对应的watche\r\n\t\t// debugger;\r\n\t\tob.dep.notify();\r\n\t\t// console.log(\"更新啦\", ob);\r\n\r\n\t\treturn result;\r\n\t};\r\n});\r\n","/**\r\n * 是否有自己的属性\r\n */\r\nexport function hasOwn(obj, key) {\r\n\treturn Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n/**\r\n * 判断是否是函数\r\n * @param {*} val\r\n * @returns\r\n */\r\nexport function isFunction(val) {\r\n\treturn typeof val === \"function\";\r\n}\r\n/**\r\n * 判断是否是Array\r\n */\r\nexport const isArray = Array.isArray;\r\n\r\n/**\r\n * 判断是\r\n * @param {object} val\r\n * @returns\r\n */\r\nexport function isString(val) {\r\n\treturn typeof val === \"string\";\r\n}\r\n\r\nexport function isReservedTag(tag) {\r\n\treturn [\"a\", \"div\", \"p\", \"button\", \"ul\", \"li\", \"span\"].includes(tag);\r\n}\r\n\r\nexport function isObject(isObj) {\r\n\treturn typeof isObj === \"object\";\r\n}\r\n","let id = 0;\r\nclass Dep {\r\n\tconstructor() {\r\n\t\tthis.id = id++; //属性的dep收集watcher\r\n\t\tthis.subs = []; //存放着当前属性对应的watchher\r\n\t}\r\n\r\n\tdepend() {\r\n\t\t//这里不希望放重复的内容，而且只是一个单向的关系dep->watcher\r\n\t\t//让watcher记录dep，比如组件卸载，\r\n\t\t//在这里记录watcher会重复\r\n\t\t// this.subs.push(Dep.target);\r\n\t\t// console.log(\"添加后：\", this.subs);\r\n\r\n\t\tDep.target.addDep(this); // 让watcher记住dep\r\n\t}\r\n\t//dep记住watcher的方法\r\n\taddSub(watcher) {\r\n\t\tthis.subs.push(watcher);\r\n\t}\r\n\r\n\tnotify() {\r\n\t\t// console.log(\"notify被调用了\");\r\n\t\tthis.subs.forEach((watcher) => {\r\n\t\t\twatcher.update(); //告诉watcher要更新了\r\n\t\t});\r\n\t}\r\n}\r\nDep.target = null;\r\n//用于存放watcher\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n\tstack.push(watcher);\r\n\tDep.target = watcher;\r\n}\r\nexport function popTarget() {\r\n\tstack.pop();\r\n\tDep.target = stack[stack.length - 1];\r\n}\r\nexport default Dep;\r\n","//数据劫持\r\nimport { newArrayProtoMethods } from \"./array\";\r\nimport { hasOwn, isArray } from \"../shared/utils\";\r\nimport Dep from \"./dep\";\r\n\r\n/**\r\n * 用于观测的类\r\n */\r\n\r\nclass Observer {\r\n\tconstructor(data) {\r\n\t\t//给每个对象都做依赖收集\r\n\t\tthis.dep = new Dep();\r\n\t\t//Object.defineProperty()只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n\t\t//vue2为此专门写了一些API比如$set,$delete，而vue3中使用了Proxy，proxy可以监控到对象（数组）的所有属性\r\n\r\n\t\t// Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n\t\tObject.defineProperty(data, \"__ob__\", {\r\n\t\t\tvalue: this,\r\n\t\t\tenumerable: false, // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n\t\t});\r\n\t\t// data.__ob__ = this;//直接这样搞会死循环，因为observe中会判断是否已经被劫持了\r\n\r\n\t\tif (isArray(data)) {\r\n\t\t\t//如果是数组，要重写数组的方法,7个变异方法\r\n\t\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\t\tdata.__proto__ = newArrayProtoMethods;\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 遍历对象的所有属性，对其进行劫持，重新定义属性，性能差\r\n\t */\r\n\twalk(data) {\r\n\t\t//判断是否是对象\r\n\t\tObject.keys(data).forEach((key) => {\r\n\t\t\t//对每个属性进行劫持，重新定义属性\r\n\t\t\tdefineReactive(data, key, data[key]);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 数组对象监视器,监视数组中的对象\r\n\t * @param {*} data\r\n\t */\r\n\tobserveArray(data) {\r\n\t\t//如果数组中的元素是对象，还要对对象进行劫持\r\n\t\tdata.forEach((item) => observe(item));\r\n\t}\r\n}\r\n/**\r\n * 劫持对象的属性\r\n * 缺点：\r\n * 1.defineProperty只能对对象原有的属性进行劫持，如果新增的或者删除的，他并不能监控到\r\n * 2.性能差，需要一上来就递归，把所有的属性都进行劫持，如果属性值是对象，还要继续递归\r\n * 3.不能对数组进行劫持，不是不能劫持，而是劫持数组会给每一个元素添加get和set，\r\n * 性能太差，并且用户修改数组一般也不是通过arr[index]来修改的，\r\n * 都是通过push、shift等方法来修改的，所以vue重写了这些方法\r\n * 4.只能对属性进行劫持，不能对整个对象进行劫持\r\n * @param {*} data\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(data, key, value) {\r\n\t//value放到闭包中，不会被销毁\r\n\t//深层劫持，如果value是对象，也要进行劫持\r\n\tlet childOb = observe(value); //childOb.dep 用来收集依赖的\r\n\r\n\tlet dep = new Dep(); //每一个属性都有dep\r\n\t//实现劫持\r\n\tObject.defineProperty(data, key, {\r\n\t\tget() {\r\n\t\t\t//收集依赖\r\n\r\n\t\t\t// console.log(\"get被调用了\");\r\n\t\t\t// console.log(\"dt\", Dep.target);\r\n\t\t\tif (Dep.target) {\r\n\t\t\t\t//记住这个属性的watcher\r\n\t\t\t\tdep.depend();\r\n\r\n\t\t\t\tif (childOb) {\r\n\t\t\t\t\t//依赖收集\r\n\t\t\t\t\tchildOb.dep.depend(); //让数组和对象本身也实现依赖收集\r\n\t\t\t\t\tif (isArray(value)) {\r\n\t\t\t\t\t\tdependArray(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\t//触发依赖更新\r\n\t\t\t//如果新值和旧值一样，直接返回\r\n\t\t\tif (newValue === value) return;\r\n\t\t\t//如果设置的值是对象，也要进行劫持\r\n\t\t\tobserve(newValue);\r\n\t\t\t//重新赋值\r\n\t\t\tvalue = newValue;\r\n\t\t\tdep.notify(); //通知更新\r\n\t\t},\r\n\t});\r\n}\r\n/**\r\n *\r\n * @param {*} data 监视器\r\n * @returns Observer实例\r\n */\r\nexport function observe(data) {\r\n\t// debugger;\r\n\t//只对对象进行劫持\r\n\tif (typeof data !== \"object\" || data == null) {\r\n\t\treturn;\r\n\t}\r\n\t//如果不是对象，就不需要监视了\r\n\tif (data.__ob__ instanceof Observer) {\r\n\t\treturn data.__ob__;\r\n\t}\r\n\r\n\t//如果一个对象被劫持过了，那就不需要再被劫持了\r\n\t//（要判断一个对象是否被劫持，可以增加一个实例，用实例来判断是否被劫持过）\r\n\treturn new Observer(data);\r\n}\r\n// 深层次嵌套会递归，递归多了性能差，不存在的属性监控不到，存在的属性要重写方法  vue3-> proxy\r\nfunction dependArray(value) {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tlet current = value[i];\r\n\t\tcurrent.__ob__ && current.__ob__.dep.depend();\r\n\t\tif (Array.isArray(current)) {\r\n\t\t\tdependArray(current);\r\n\t\t}\r\n\t}\r\n}\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n//当我们创建渲染watcher的时候我们会把当前的渲染watcher放到dep.targetget上\r\n//调用_render()会取值，走到get方法\r\nlet id = 0;\r\n//观察者模式\r\n//每个属性都有一个dep（属性是被观察者），watcher就是观察者（属性变化了会通知观察者更新）\r\nclass Watcher {\r\n\t//不同组件有不同的watcher\r\n\tconstructor(vm, exprOrFn, options, cb) {\r\n\t\tthis.id = id++;\r\n\t\tthis.renderWatcher = options; // 是一个渲染watcher\r\n\r\n\t\tif (typeof exprOrFn === \"string\") {\r\n\t\t\tthis.getter = function () {\r\n\t\t\t\treturn vm[exprOrFn];\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.getter = exprOrFn; // getter意味着调用这个函数可以发生取值操作\r\n\t\t}\r\n\r\n\t\tthis.depsId = new Set();\r\n\r\n\t\tthis.deps = []; //watcher记录dep，后续实现计算属性和一些清理工作需要使用\r\n\t\tthis.cb = cb;\r\n\t\tthis.lazy = options.lazy;\r\n\t\tthis.dirty = this.lazy; //缓存\r\n\t\t// this.lazy ? undefined : this.get();\r\n\t\t// this.get();\r\n\t\tthis.vm = vm;\r\n\t\tthis.user = options.user; // 标识是否是用户自己的watcher\r\n\r\n\t\tthis.value = this.lazy ? undefined : this.get(); //第一次的时候lazy为undefined，不会取值\r\n\t}\r\n\tget() {\r\n\t\tpushTarget(this);\r\n\t\t// Dep.target = this; ///添加一个静态属性,把当前watcher暴露到全局上，放到dep上\r\n\t\tlet value = this.getter.call(this.vm); //会去vm上取值  vm._update(vm._render) 取name 和age\r\n\t\t// Dep.target = null; //渲染后清空\r\n\t\tpopTarget();\r\n\t\treturn value;\r\n\t}\r\n\t//一个组件对应多个属性重复的属性也不用记录，可以利用Set去重\r\n\taddDep(dep) {\r\n\t\tlet id = dep.id;\r\n\t\tif (!this.depsId.has(id)) {\r\n\t\t\t//watcher记住dep以及depId\r\n\t\t\tthis.deps.push(dep);\r\n\t\t\tthis.depsId.add(id);\r\n\t\t\t//dep记住watcher\r\n\t\t\tdep.addSub(this);\r\n\t\t\t// watcher已经记住了dep了而且去重了，此时让dep也记住watcher\r\n\t\t}\r\n\t}\r\n\tevaluate() {\r\n\t\tthis.value = this.get(); // 获取到用户函数的返回值 并且还要标识为脏\r\n\t\t//通过调用get把计算属性也放入队列中\r\n\t\t//该队列中的内容：渲染watcher、computed的watcher\r\n\t\tthis.dirty = false;\r\n\t}\r\n\t// watcher的depend 就是让watcher中dep去depend\r\n\tdepend() {\r\n\t\tlet i = this.deps.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tthis.deps[i].depend(); // 让计算属性watcher 也收集渲染watcher\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t// this.get(); //更新，重新渲染\r\n\t\t// console.log(\"update 被执行了\");\r\n\t\t//把多次操作，一次执行\r\n\t\tif (this.lazy) {\r\n\t\t\t// 如果是计算属性  依赖的值变化了 就标识计算属性是脏值了\r\n\t\t\tthis.dirty = true;\r\n\t\t} else {\r\n\t\t\tqueueWatcher(this); // 把当前的watcher 暂存起来\r\n\t\t\t// this.get(); // 重新渲染\r\n\t\t}\r\n\t}\r\n\trun() {\r\n\t\t//watch\r\n\t\tlet oldValue = this.value;\r\n\t\tlet newValue = this.get(); // 渲染的时候用的是最新的vm来渲染的\r\n\t\tif (this.user) {\r\n\t\t\tthis.cb.call(this.vm, newValue, oldValue);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n//利用对象去重，也可以使用set\r\n/**\r\n * 观察器队列\r\n * @param {*} watcher\r\n */\r\nfunction queueWatcher(watcher) {\r\n\t//去重\r\n\tconst id = watcher.id;\r\n\r\n\tif (!has[id]) {\r\n\t\tqueue.push(watcher);\r\n\t\thas[id] = true;\r\n\t\t//不管update执行多少次，最终只会执行一次刷新操作\r\n\r\n\t\tif (!pending) {\r\n\t\t\tnextTick(flushSchedulerQueue, 0);\r\n\t\t\t//这样直接调还有问题，就是如果用户使用的Promise的话还是不行，\r\n\t\t\t//解决办法，无论用户使用的是setTimeout，还是Promise我们统一使用nextTick包裹\r\n\r\n\t\t\tpending = true;\r\n\t\t}\r\n\t}\r\n}\r\nlet callbacks = [];\r\nlet waiting = false;\r\n/**\r\n * nextTick\r\n */\r\nexport function nextTick(cb) {\r\n\tcallbacks.push(cb); //放进去的时候是同步\r\n\tif (!waiting) {\r\n\t\t//真实的vue代码中并没有直接采用setTimeout方法来实现，而是采用优雅降级的方式\r\n\t\t//vue代码中内部先采用Promise（IE不兼容），然后使用HTML5的APIMutationObserver，如果还不兼容，\r\n\t\t//使用IE专享的setImmediate，再降级使用setTimeout\r\n\t\t/* setTimeout(() => {\r\n\t\t\t//刷新是异步\r\n\t\t\ttimerFunction(flushCallbacks);\r\n\t\t}, 0); */\r\n\t\ttimerFunc();\r\n\t\t// Promise.resolve().then(flushCallbacks)\r\n\t\twaiting = true;\r\n\t}\r\n}\r\n\r\nlet timerFunc;\r\nif (Promise) {\r\n\ttimerFunc = () => {\r\n\t\tPromise.resolve().then(flushCallbacks);\r\n\t};\r\n} else if (MutationObserver) {\r\n\tlet observer = new MutationObserver(flushCallbacks);\r\n\t// 这里传入的回调是异步执行的\r\n\tlet textNode = document.createTextNode(1);\r\n\tobserver.observe(textNode, {\r\n\t\tcharacterData: true,\r\n\t});\r\n\ttimerFunc = () => {\r\n\t\ttextNode.textContent = 2;\r\n\t};\r\n} else if (setImmediate) {\r\n\ttimerFunc = () => {\r\n\t\tsetImmediate(flushCallbacks);\r\n\t};\r\n} else {\r\n\ttimerFunc = () => {\r\n\t\tsetTimeout(flushCallbacks);\r\n\t};\r\n}\r\n\r\nfunction flushCallbacks() {\r\n\tlet cbs = callbacks.slice(0);\r\n\twaiting = false;\r\n\tcallbacks = [];\r\n\tcbs.forEach((cb) => cb());\r\n}\r\n/**\r\n *批量指定队列中的渲染\r\n */\r\nfunction flushSchedulerQueue() {\r\n\tlet flushQueue = queue.slice(0); //在刷新的过程中，有可能会有新的放到队列，所以拷贝一份\r\n\r\n\tqueue = [];\r\n\thas = {};\r\n\tpending = false;\r\n\tflushQueue.forEach((q) => q.run());\r\n}\r\n\r\n//需要给每个属性增加一个dep，目的就是收集watcher\r\n\r\n//一个组件中，有多少个属性（n个属性会对应一个视图），n个dep对应一个watcher\r\n//一个属性对应多个视图（组件），一个dep对应多个watcher\r\n//多对多关系\r\n\r\nexport default Watcher;\r\n","import { isFunction } from \"../shared/utils\";\r\nimport Dep from \"../observer/dep\";\r\nimport Watcher from \"../observer/watcher\";\r\nexport function initComputed(vm) {\r\n\tconst computed = vm.$options.computed;\r\n\tconst watchers = (vm._computedWatchers = {}); // 将计算属性watcher保存到vm上\r\n\tfor (let key in computed) {\r\n\t\tlet useDef = computed[key];\r\n\t\tlet fn = isFunction(useDef) ? useDef : useDef.get;\r\n\t\t//如果直接使用watcher会立即执行，可以传递一个lazy参数\r\n\t\twatchers[key] = new Watcher(vm, fn, { lazy: true });\r\n\t\t// 我们需要监控 计算属性中get的变化\r\n\t\t// 如果直接new Watcher 默认就会执行fn, 将属性和watcher对应起来\r\n\t\t// console.log(useDef);\r\n\t\tdefineComputed(vm, key, useDef);\r\n\t}\r\n}\r\nfunction defineComputed(target, key, useDef) {\r\n\t// const getter = isFunction(useDef) ? useDef : useDef.get;\r\n\t// console.log(\"get\", getter);\r\n\r\n\tconst setter = useDef.set || (() => {});\r\n\t// console.log(setter);\r\n\t//利用defineProperty监听，这样也实现了computed，但是没有缓存，会被反复执行，可以创建watcher\r\n\t// 可以通过实例拿到对应的属性\r\n\tObject.defineProperty(target, key, {\r\n\t\tget: createComputedGetter(key),\r\n\t\tset: setter,\r\n\t});\r\n}\r\n// 计算属性根本不会收集依赖 ，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n\t//要检测是否执行该getter\r\n\treturn function () {\r\n\t\t//这时需要拿到watcher判断lazy属性，但是无法直接拿，因为this是vm,可以把所有的计算属性保存到vm上\r\n\t\tconst watcher = this._computedWatchers[key]; //通过vm获取到对应属性的watcher\r\n\r\n\t\t// console.log(w);\r\n\t\tif (watcher.dirty) {\r\n\t\t\t//如果是脏的，就执行用户的get\r\n\t\t\twatcher.evaluate(); // 求值后 dirty变为了false ,下次就不求值了\r\n\t\t}\r\n\t\tif (Dep.target) {\r\n\t\t\t// 计算属性出栈后 还要渲染watcher， 我应该让计算属性watcher里面的属性 也去收集上一层watcher\r\n\t\t\twatcher.depend();\r\n\t\t}\r\n\t\treturn watcher.value; // 最后返回的是watcher上的值\r\n\t};\r\n}\r\n","import { isArray } from \"../shared/utils\";\r\nexport function initWatch(vm) {\r\n\tlet watch = vm.$options.watch;\r\n\tfor (let key in watch) {\r\n\t\tconst handler = watch[key]; // 字符串 数组 函数\r\n\t\tif (isArray(handler)) {\r\n\t\t\tfor (let i = 0; i < handler.length; i++) {\r\n\t\t\t\tcreateWatcher(vm, key, handler[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcreateWatcher(vm, key, handler);\r\n\t\t}\r\n\t}\r\n}\r\nfunction createWatcher(vm, key, handler) {\r\n\t// 字符串  函数\r\n\tif (typeof handler === \"string\") {\r\n\t\thandler = vm[handler];\r\n\t}\r\n\treturn vm.$watch(key, handler);\r\n}\r\n","import { observe } from \"./observer\";\r\nimport { isFunction } from \"./shared/utils\";\r\nimport { initComputed } from \"./computed/index\";\r\nimport Watcher, { nextTick } from \"./observer/watcher\";\r\nimport { initWatch } from \"./watch/index\";\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick;\r\n  // 最终调用的都是这个方法\r\n  Vue.prototype.$watch = function (exprOrFn, cb) {\r\n    // firstname\r\n    // ()=>vm.firstname\r\n\r\n    // firstname的值变化了 直接执行cb函数即可\r\n    new Watcher(this, exprOrFn, { user: true }, cb);\r\n  };\r\n}\r\n\r\n//初始化状态,this是undefined\r\nexport function initState(vm) {\r\n  const options = vm.$options;\r\n  if (options.data) {\r\n    initData(vm);\r\n  } else {\r\n    const ob = observe((vm._data = {}));\r\n    ob && ob.vmCount++;\r\n  }\r\n\r\n  if (options.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (options.watch) {\r\n    initWatch(vm);\r\n  }\r\n}\r\n\r\n//初始化data，this是undefined\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  //data可能是函数，也可能是对象\r\n  data = isFunction(data) ? data.call(vm) : data;\r\n  vm._data = data; //data是用户返回的对象\r\n\r\n  /* const keys = Object.keys(data);\r\n\tlet i = keys.length;\r\n\twhile (i--) {\r\n\t\tconst key = keys[i];\r\n\t\tif (isReserved(key)) {\r\n\t\t\tproxy(vm, \"_data\", key);\r\n\t\t}\r\n\t} */\r\n  //数据劫持\r\n  const ob = observe(data);\r\n  ob && ob.vmCount++;\r\n\r\n  //将data代理到vm上\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n/**\r\n * 将_data上的属性代理到vm上\r\n * @param {*} vm\r\n * @param {*} target\r\n * @param {*} key\r\n */\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n\t/^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n//验证正则网址https://regexper.com/\r\n\r\n/**\r\n *\r\n * {\r\n * tag:'div',//标签名\r\n * type:1,//元素类型\r\n * attrs:[{name,age,address}],//记录属性\r\n * parent:null,//记录父节点\r\n * children:[]\r\n * }\r\n */\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n\t// html最开始肯定是一个  </div>\r\n\r\n\tconst ELEMENT_TYPE = 1; //标签\r\n\tconst TEXT_TYPE = 3; //文本\r\n\tconst stack = []; // 用于存放元素的栈\r\n\tlet currentParent; // 指向的是栈中的最后一个\r\n\tlet root; // 树的根节点\r\n\r\n\t//循环解析html\r\n\twhile (html) {\r\n\t\t// 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n\t\t// 如果textEnd > 0说明就是文本的结束位置\r\n\t\tlet textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n\t\tif (textEnd == 0) {\r\n\t\t\tconst startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\t// 解析到的开始标签\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//匹配结束标签\r\n\t\t\tlet endTagMatch = html.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\t//end\r\n\t\t\t\tend(endTagMatch[1]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 如果不是0 说明是文本\r\n\t\tif (textEnd > 0) {\r\n\t\t\tlet text = html.substring(0, textEnd); // 文本内容\r\n\t\t\tif (text) {\r\n\t\t\t\tchars(text);\r\n\t\t\t\tadvance(text.length);\r\n\t\t\t\t// 删除解析过的文本\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//解析开始标签\r\n\tfunction parseStartTag() {\r\n\t\tconst start = html.match(startTagOpen);\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 标签名\r\n\t\t\t\tattrs: [],\r\n\t\t\t};\r\n\t\t\t//删除解析过的标签，前进\r\n\t\t\tadvance(start[0].length);\r\n\r\n\t\t\t// 如果不是开始标签的结束 就一直匹配下去\r\n\t\t\tlet attr, end;\r\n\t\t\twhile (\r\n\t\t\t\t!(end = html.match(startTagClose)) &&\r\n\t\t\t\t(attr = html.match(attribute))\r\n\t\t\t) {\r\n\t\t\t\t//删除解析过的属性，前进\r\n\t\t\t\tadvance(attr[0].length);\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attr[1],\r\n\t\t\t\t\tvalue: attr[3] || attr[4] || attr[5] || true,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (end) {\r\n\t\t\t\t//删掉开始标签的>\r\n\t\t\t\tadvance(end[0].length);\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t}\r\n\t\treturn false; // 不是开始标签\r\n\t}\r\n\r\n\t// 利用栈型结构 来构造一颗树\r\n\t//栈中的最后一个元素是当前匹配到开始标签的父亲\r\n\tfunction start(tag, attrs) {\r\n\t\t//匹配到开始标签，创建一个栈\r\n\t\tlet node = createASTElement(tag, attrs); // 创造一个ast节点\r\n\t\tif (!root) {\r\n\t\t\t// 看一下是否是空树\r\n\t\t\troot = node; // 如果为空则当前是树的根节点\r\n\t\t}\r\n\t\tif (currentParent) {\r\n\t\t\tnode.parent = currentParent; // 只赋予了parent属性\r\n\t\t\tcurrentParent.children.push(node); // 还需要让父亲记住自己\r\n\t\t}\r\n\t\t//放入栈中\r\n\t\tstack.push(node);\r\n\t\tcurrentParent = node; // currentParent为栈中的最后一个\r\n\t}\r\n\t//解析文本\r\n\tfunction chars(text) {\r\n\t\t// 文本直接放到当前指向的节点中\r\n\t\ttext = text.replace(/\\s/g, \" \"); // 如果空格超过2就删除2个以上的\r\n\t\ttext &&\r\n\t\t\tcurrentParent.children.push({\r\n\t\t\t\ttype: TEXT_TYPE,\r\n\t\t\t\ttext,\r\n\t\t\t\tparent: currentParent,\r\n\t\t\t});\r\n\t}\r\n\t//解析结束标签\r\n\tfunction end(tag) {\r\n\t\tlet node = stack.pop(); // 弹出最后一个, 利用node还可以校验标签是否合法\r\n\t\tcurrentParent = stack[stack.length - 1];\r\n\t}\r\n\t//删除解析过的标签\r\n\tfunction advance(n) {\r\n\t\thtml = html.substring(n);\r\n\t}\r\n\r\n\t//最终需要转化成一颗抽象语法树\r\n\tfunction createASTElement(tag, attrs) {\r\n\t\treturn {\r\n\t\t\ttag,\r\n\t\t\ttype: ELEMENT_TYPE,\r\n\t\t\tchildren: [],\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t};\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\n//生成属性\r\nfunction genProps(attrs) {\r\n\tlet str = \"\"; // {name,value}\r\n\tfor (let i = 0; i < attrs.length; i++) {\r\n\t\tlet attr = attrs[i];\r\n\t\tif (attr.name === \"style\") {\r\n\t\t\t// color:red;background:red => {color:'red'}\r\n\t\t\tlet obj = {};\r\n\t\t\tattr.value.split(\";\").forEach((item) => {\r\n\t\t\t\t// qs 库\r\n\t\t\t\tlet [key, value] = item.split(\":\");\r\n\t\t\t\tobj[key] = value;\r\n\t\t\t});\r\n\t\t\tattr.value = obj;\r\n\t\t}\r\n\t\tstr += `${attr.name}:${JSON.stringify(attr.value)},`; // a:b,c:d,\r\n\t}\r\n\treturn `{${str.slice(0, -1)}}`;\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n\tif (node.type === 1) {\r\n\t\treturn codeGen(node);\r\n\t} else {\r\n\t\t// 文本\r\n\t\tlet text = node.text;\r\n\t\tif (!defaultTagRE.test(text)) {\r\n\t\t\treturn `_v(${JSON.stringify(text)})`;\r\n\t\t} else {\r\n\t\t\t//_v( _s(name)+'hello' + _s(name))\r\n\t\t\tlet tokens = [];\r\n\t\t\tlet match;\r\n\t\t\tdefaultTagRE.lastIndex = 0;\r\n\t\t\tlet lastIndex = 0;\r\n\t\t\t// split\r\n\t\t\twhile ((match = defaultTagRE.exec(text))) {\r\n\t\t\t\tlet index = match.index;\r\n\t\t\t\t// 匹配的位置  {{name}} hello  {{name}} hello\r\n\t\t\t\tif (index > lastIndex) {\r\n\t\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n\t\t\t\t}\r\n\t\t\t\ttokens.push(`_s(${match[1].trim()})`);\r\n\t\t\t\tlastIndex = index + match[0].length;\r\n\t\t\t}\r\n\t\t\tif (lastIndex < text.length) {\r\n\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex)));\r\n\t\t\t}\r\n\t\t\treturn `_v(${tokens.join(\"+\")})`;\r\n\t\t}\r\n\t}\r\n}\r\n//生成孩子\r\nfunction genChildren(children) {\r\n\treturn children.map((child) => gen(child)).join(\",\");\r\n}\r\n//代码生成\r\nfunction codeGen(ast) {\r\n\tlet children = genChildren(ast.children);\r\n\t//字符串拼接代码\r\n\tlet code = `_c('${ast.tag}',${\r\n\t\tast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n\t}${ast.children.length ? `,${children}` : \"\"})`;\r\n\r\n\treturn code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\t// 1.就是将template 转化成ast语法树\r\n\tlet ast = parseHTML(template);\r\n\r\n\t// 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\t//render(){return _c('div),{id:'app},_c('div',{style:{color:'red'}},_v())}\r\n\t// 模板引擎的实现原理 就是 with  + new Function\r\n\r\n\tlet code = codeGen(ast);\r\n\tcode = `with(this){return ${code}}`;\r\n\r\n\tlet render = new Function(code); // 根据代码生成render函数\r\n\r\n\t//  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n\treturn render;\r\n}\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa\r\n","//给构建虚拟节点提供一些方法\r\n\r\nimport { isObject, isReservedTag } from \"../shared/utils\";\r\n\r\n//h(),_c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if (data == null) {\r\n    data = {};\r\n  }\r\n  let key = data.key;\r\n  if (key) {\r\n    delete data.key;\r\n  }\r\n\r\n  if (isReservedTag(tag)) {\r\n    return vnode(vm, tag, key, data, children);\r\n  } else {\r\n    // 创造一个组件的虚拟节点  (包含组件的构造函数)\r\n    let Ctor = vm.$options.components[tag]; // 组件的构造函数\r\n    // Ctor就是组件的定义 可能是一个Sub类 还有可能是组件的obj选项\r\n    return createComponentVnode(vm, tag, key, data, children, Ctor);\r\n  }\r\n}\r\n\r\n//_v()\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// vnode和ast一样吗？\r\n//ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text, componentOptions) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    componentOptions, // 组件的构造函数\r\n    // ....\r\n  };\r\n}\r\nexport function isSameVnode(vnode1, vnode2) {\r\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n/**\r\n * 根据组件创建Vnode\r\n * @param {Vue} vm\r\n * @param {string} tag html标签\r\n * @param {*} key key\r\n * @param {*} data 数据\r\n * @param {*} children 子节点\r\n * @param {*} Ctor\r\n * @returns\r\n */\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n  if (typeof Ctor === \"object\") {\r\n    Ctor = vm.$options._base.extend(Ctor);\r\n    // Ctor = Vue.extend(Ctor)\r\n  }\r\n  // debugger;\r\n  data.hook = {\r\n    init(vnode) {\r\n      // 稍后创造真实节点的时候 如果是组件则调用此init方法\r\n      // 保存组件的实例到虚拟节点上\r\n      let instance = (vnode.componentInstance =\r\n        new vnode.componentOptions.Ctor());\r\n      instance.$mount(); // instance.$el\r\n    },\r\n  };\r\n\r\n  return vnode(vm, tag, key, data, children, null, { Ctor });\r\n}\r\n","import { isSameVnode } from \".\";\r\n\r\nfunction createComponent(vnode) {\r\n  let i = vnode.data;\r\n  if ((i = i.hook) && (i = i.init)) {\r\n    // data.hook.init\r\n    i(vnode); // 初始化组件 ， 找到init方法\r\n  }\r\n  if (vnode.componentInstance) {\r\n    return true; // 说明是组件\r\n  }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    // 标签\r\n    // 创建真实元素 也要区分是组件还是元素\r\n    if (createComponent(vnode)) {\r\n      // 组件  vnode.componentInstance.$el\r\n      return vnode.componentInstance.$el;\r\n    }\r\n    vnode.el = document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n    patchProps(vnode.el, {}, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child)); // 会将组件创建的元素插入到父元素中\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n  // 老的属性中有，新的没有  要删除老的\r\n  let oldStyles = oldProps.style || {};\r\n  let newStyles = props.style || {};\r\n  for (let key in oldStyles) {\r\n    // 老的样式中有 新的吗，没有则删除\r\n    if (!newStyles[key]) {\r\n      el.style[key] = \"\";\r\n    }\r\n  }\r\n\r\n  for (let key in oldProps) {\r\n    // 老的属性中有\r\n    if (!props[key]) {\r\n      // 新的没有删除属性\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n  for (let key in props) {\r\n    // 用新的覆盖老的\r\n    if (key === \"style\") {\r\n      // style{color:'red'}\r\n      for (let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key]);\r\n    }\r\n  }\r\n}\r\nexport function patch(oldVNode, vnode) {\r\n  // mount()\r\n  if (!oldVNode) {\r\n    // 这就是组件的挂载\r\n    return createElm(vnode); // vm.$el  对应的就是组件渲染的结果了\r\n  }\r\n\r\n  // 写的是初渲染流程\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; // 获取真实元素\r\n    const parentElm = elm.parentNode; // 拿到父元素\r\n    let newElm = createElm(vnode);\r\n    parentElm.insertBefore(newElm, elm.nextSibling);\r\n    parentElm.removeChild(elm); // 删除老节点\r\n\r\n    return newElm;\r\n  } else {\r\n    // 1.两个节点不是同一个节点  直接删除老的换上新的  （没有比对了）\r\n    // 2.两个节点是同一个节点 (判断节点的tag和 节点的key)  比较两个节点的属性是否有差异 （复用老的节点，将差异的属性更新）\r\n    // 3.节点比较完毕后就需要比较两人的儿子\r\n    return patchVnode(oldVNode, vnode);\r\n  }\r\n}\r\n\r\nfunction patchVnode(oldVNode, vnode) {\r\n  if (!isSameVnode(oldVNode, vnode)) {\r\n    // tag == tag key === key\r\n    // 用老节点的父亲 进行替换\r\n    let el = createElm(vnode);\r\n    oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n    return el;\r\n  }\r\n\r\n  // 文本的情况  文本我们期望比较一下文本的内容\r\n  let el = (vnode.el = oldVNode.el); // 复用老节点的元素\r\n  if (!oldVNode.tag) {\r\n    // 是文本\r\n    if (oldVNode.text !== vnode.text) {\r\n      el.textContent = vnode.text; // 用新的文本覆盖掉老的\r\n    }\r\n  }\r\n  // 是标签   是标签我们需要比对标签的属性\r\n  patchProps(el, oldVNode.data, vnode.data);\r\n\r\n  // 比较儿子节点 比较的时候 一方有儿子 一方没儿子\r\n  //                       两方都有儿子\r\n\r\n  let oldChildren = oldVNode.children || [];\r\n  let newChildren = vnode.children || [];\r\n\r\n  if (oldChildren.length > 0 && newChildren.length > 0) {\r\n    // 完整的diff算法 需要比较两个人的儿子\r\n    updateChildren(el, oldChildren, newChildren);\r\n  } else if (newChildren.length > 0) {\r\n    // 没有老的，有新的\r\n    mountChildren(el, newChildren);\r\n  } else if (oldChildren.length > 0) {\r\n    // 新的没有  老的有 要删除\r\n    el.innerHTML = \"\"; // 可以循环删除\r\n  }\r\n  return el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n  for (let i = 0; i < newChildren.length; i++) {\r\n    let child = newChildren[i];\r\n    el.appendChild(createElm(child));\r\n  }\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  // 我们操作列表 经常会是有  push shift pop unshift reverse sort这些方法  （针对这些情况做一个优化）\r\n  // vue2中采用双指针的方式 比较两个节点\r\n  let oldStartIndex = 0;\r\n  let newStartIndex = 0;\r\n  let oldEndIndex = oldChildren.length - 1;\r\n  let newEndIndex = newChildren.length - 1;\r\n\r\n  let oldStartVnode = oldChildren[0];\r\n  let newStartVnode = newChildren[0];\r\n\r\n  let oldEndVnode = oldChildren[oldEndIndex];\r\n  let newEndVnode = newChildren[newEndIndex];\r\n\r\n  function makeIndexByKey(children) {\r\n    let map = {};\r\n    children.forEach((child, index) => {\r\n      map[child.key] = index;\r\n    });\r\n    return map;\r\n  }\r\n\r\n  let map = makeIndexByKey(oldChildren);\r\n\r\n  // 循环的时候为什么要+key\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    // 有任何一个不满足则停止  || 有一个为true 就继续走\r\n    // 双方有一方头指针，大于尾部指针则停止循环\r\n    if (!oldStartVnode) {\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      patchVnode(oldStartVnode, newStartVnode); // 如果是相同节点 则递归比较子节点\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n      // 比较开头节点\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      patchVnode(oldEndVnode, newEndVnode); // 如果是相同节点 则递归比较子节点\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n      // 比较开头节点\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n      patchVnode(oldEndVnode, newStartVnode);\r\n      // insertBefore 具备移动性 会将原来的元素移动走\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将老的尾巴移动到老的前面去\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n      patchVnode(oldStartVnode, newEndVnode);\r\n      // insertBefore 具备移动性 会将原来的元素移动走\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); // 将老的尾巴移动到老的前面去\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else {\r\n      // 在给动态列表添加key的时候 要尽量避免用索引，因为索引前后都是从0 开始 ， 可能会发生错误复用\r\n      // 乱序比对\r\n      // 根据老的列表做一个映射关系 ，用新的去找，找到则移动，找不到则添加，最后多余的就删除\r\n      let moveIndex = map[newStartVnode.key]; // 如果拿到则说明是我要移动的索引\r\n      if (moveIndex !== undefined) {\r\n        let moveVnode = oldChildren[moveIndex]; // 找到对应的虚拟节点 复用\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n        oldChildren[moveIndex] = undefined; // 表示这个节点已经移动走了\r\n        patchVnode(moveVnode, newStartVnode); // 比对属性和子节点\r\n      } else {\r\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    }\r\n  }\r\n  if (newStartIndex <= newEndIndex) {\r\n    // 新的多了 多余的就插入进去\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      let childEl = createElm(newChildren[i]);\r\n      // 这里可能是像后追加 ，还有可能是向前追加\r\n      let anchor = newChildren[newEndIndex + 1]\r\n        ? newChildren[newEndIndex + 1].el\r\n        : null; // 获取下一个元素\r\n      // el.appendChild(childEl);\r\n      el.insertBefore(childEl, anchor); // anchor 为null的时候则会认为是appendChild\r\n    }\r\n  }\r\n\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    // 老的对了，需要删除老的\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      if (oldChildren[i]) {\r\n        let childEl = oldChildren[i].el;\r\n        el.removeChild(childEl);\r\n      }\r\n    }\r\n  }\r\n\r\n  // 我们为了 比较两个儿子的时候 ，增高性能 我们会有一些优化手段\r\n  // 如果批量像页面中修改出入内容 浏览器会自动优化\r\n}\r\n","import { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport Watcher from \"./observer/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n//扩展生命周期，渲染函数\r\nexport function initLifecycle(Vue) {\r\n  Vue.prototype._render = function () {\r\n    //通过ast语法转义后生成的render方法\r\n\r\n    // debugger;\r\n    return this.$options.render.call(this); //_c,_v函数没有定义时调用会报错\r\n  };\r\n  //把VNode转换成真实dom\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    const prevVnode = vm._vnode;\r\n\r\n    vm._vnode = vnode; // 把组件第一次产生的虚拟节点保存到_vnode上\r\n    if (prevVnode) {\r\n      // 之前渲染过了\r\n      vm.$el = patch(prevVnode, vnode);\r\n    } else {\r\n      vm.$el = patch(el, vnode);\r\n    }\r\n  };\r\n\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== \"object\") return value;\r\n    return JSON.stringify(value);\r\n  };\r\n}\r\n//组件挂载\r\nexport function mountComponent(vm, el) {\r\n  //// 这里的el 是通过querySelector处理过的\r\n  vm.$el = el;\r\n  //1.调用render产生虚拟dom\r\n\r\n  const updateComponent = () => {\r\n    vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n  };\r\n  // vm._update(vm._render());\r\n  // debugger;\r\n  const watcher = new Watcher(vm, updateComponent, true); // true用于标识是一个渲染watcher\r\n\r\n  //2.根据虚拟dom生成真实dom\r\n\r\n  //3.放到真实dom中\r\n}\r\n\r\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树\r\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM\r\n\r\nexport function callHook(vm, hook) {\r\n  // 调用钩子函数\r\n\r\n  const handlers = vm.$options[hook];\r\n\r\n  if (handlers) {\r\n    handlers.forEach((handler) => handler.call(vm));\r\n  }\r\n}\r\n","const strats = {};\r\nconst LIFECYCLE = [\"beforeCreate\", \"created\"];\r\nLIFECYCLE.forEach((hook) => {\r\n  strats[hook] = function (p, c) {\r\n    //  {} {created:function(){}}   => {created:[fn]}\r\n    // {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\r\n    if (c) {\r\n      // 如果儿子有 父亲有   让父亲和儿子拼在一起\r\n      if (p) {\r\n        return p.concat(c);\r\n      } else {\r\n        return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\r\n      }\r\n    } else {\r\n      return p; // 如果儿子没有则用父亲即可\r\n    }\r\n  };\r\n});\r\n\r\nstrats.components = function (parentVal, childVal) {\r\n  const res = Object.create(parentVal);\r\n\r\n  if (childVal) {\r\n    for (let key in childVal) {\r\n      res[key] = childVal[key]; // 返回的是构造的对象 可以拿到父亲原型上的属性，并且将儿子的都拷贝到自己身上\r\n    }\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\n//把子组件的选项挂到父组件上\r\nexport function mergeOptions(parent, child) {\r\n  const options = {};\r\n  for (let key in parent) {\r\n    // 循环老的  {}\r\n    mergeField(key);\r\n  }\r\n  for (let key in child) {\r\n    // 循环老的   {a:1}\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key);\r\n    }\r\n  }\r\n  function mergeField(key) {\r\n    // 策略模式 用策略模式减少if /else\r\n    if (strats[key]) {\r\n      options[key] = strats[key](parent[key], child[key]);\r\n    } else {\r\n      // 如果不在策略中则以儿子为主\r\n      options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\r\n    }\r\n  }\r\n  return options;\r\n}\r\n","//初始化文件，用于初始化vue实例\r\nimport { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./util\";\r\n\r\nexport function initMixins(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // vue  vm.$options 就是获取用户的配置\r\n    // 我们使用的 vue的时候 $nextTick $data $attr.....\r\n\r\n    const vm = this;\r\n    ////把用户的配置挂载到实例上\r\n    // vm.$options = options;\r\n\r\n    // 我们定义的全局指令和过滤器.... 都会挂载到实例上\r\n    vm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\r\n    callHook(vm, \"beforeCreate\"); // 内部调用的是beforeCreate 写错了就不执行了\r\n    //初始化状态\r\n    initState(vm);\r\n\r\n    callHook(vm, \"created\");\r\n    // 如果用户传入了el属性，需要将页面渲染出来\r\n    if (options.el) {\r\n      vm.$mount(options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) {\r\n      //先查找有没有render方法，没有render方法会采用template，template也没有就用el中的内容\r\n\r\n      let template; // 没有render看一下是否写了tempate, 没写template采用外部的template\r\n      if (!ops.template && el) {\r\n        // 没有写模板 但是写了el\r\n        template = el.outerHTML;\r\n      } else {\r\n        template = ops.template; // 如果有el 则采用模板的内容\r\n      }\r\n      // 写了temlate 就用 写了的template\r\n      if (template) {\r\n        // 只要有模板就挂载\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render; // jsx 最终会被编译成h('xxx')\r\n      }\r\n    }\r\n\r\n    //挂载，产生虚拟dom\r\n    mountComponent(vm, el);\r\n    //script标签引用的vue.global.js,这个编译过程是在浏览器中完成的\r\n    //如果是使用webpack打包的vue,这个编译过程是在node中完成的\r\n    //runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的\r\n  };\r\n}\r\n","import { isFunction } from \"./shared/utils\";\nimport { mergeOptions } from \"./util\";\n\nexport function initGlobalAPI(Vue) {\n\t// 静态方法\n\n\tVue.options = {\n\t\t_base: Vue,\n\t};\n\tVue.mixin = function (mixin) {\n\t\t// 我们期望将用户的选项和 全局的options进行合并 '\n\t\tthis.options = mergeOptions(this.options, mixin);\n\t\treturn this;\n\t};\n\t//初始化components\n\tVue.options.components = {};\n\t//可以通过extend进行组件挂载\n\tVue.extend = function (options) {\n\t\t//根据用户传递的参数，返回一个构造函数\n\t\tfunction Sub(options = {}) {\n\t\t\t// 最终使用一个组件 就是new一个实例\n\t\t\tthis._init(options);\n\t\t\t// 就是默认对子类进行初始化操作\n\t\t}\n\t\t//让sub继承自vue\n\t\tSub.prototype = Object.create(Vue.prototype);\n\t\t// 挂载构造方法\n\t\tSub.prototype.constructor = Sub;\n\t\t//合并用户传递的选项\n\t\tSub.options = mergeOptions(Vue.options, options);\n\n\t\treturn Sub;\n\t};\n\n\t//如果defination是函数的话，保存，是对象的话使用extend创建后保存\n\t// 全局的指令 Vue.otpions.directives\n\tVue.component = function (id, definition) {\n\t\t// 如果definition已经是一个函数了 说明用户自己调用了Vue.extend\n\t\tdefinition = typeof isFunction(definition)\n\t\t\t? definition\n\t\t\t: Vue.extend(definition);\n\t\tVue.options.components[id] = definition;\n\t};\n}\n","import { initMixins } from \"./init\";\r\nimport { initLifecycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\nimport { initGlobalAPI } from \"./gloablAPI\";\r\nfunction Vue(options) {\r\n\tthis._init(options); //默认调用了init\r\n}\r\n\r\ninitMixins(Vue); //扩展了init方法\r\ninitLifecycle(Vue);\r\ninitStateMixin(Vue); // 实现了nextTick $watch\r\ninitGlobalAPI(Vue);\r\n\r\n// -------------------------------观察前后的虚拟节点\r\n\r\n/* let render1 = compileToFunction(`<li key='a' style=\"color:blue\">{{name}}</li>`);\r\n\r\nlet vm1 = new Vue({ data: { name: \"zs\" } });\r\nlet prevNode = render1.call(vm1);\r\nlet el = createElm(prevNode);\r\ndocument.body.appendChild(el);\r\n\r\nlet render2 = compileToFunction(`<li key='a' style=\"color:blue\"></li>`);\r\n\r\nlet vm2 = new Vue({ data: { name: \"zs\" } });\r\nlet nextNode = render2.call(vm2);\r\n\r\nsetTimeout(() => {\r\n\tpatch(prevNode, nextNode);\r\n}, 1000); */\r\n\r\nexport default Vue;\r\n"],"names":["oldArrayProtoMethods","Array","prototype","newArrayProtoMethods","Object","create","methods","forEach","method","_oldArrayProtoMethods","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","dep","notify","isFunction","val","isArray","isReservedTag","tag","includes","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","__proto__","walk","keys","defineReactive","item","observe","childOb","get","dependArray","set","newValue","_typeof","i","current","Watcher","vm","exprOrFn","options","cb","renderWatcher","getter","depsId","Set","deps","lazy","dirty","user","undefined","has","add","evaluate","queueWatcher","run","oldValue","queue","pending","nextTick","flushSchedulerQueue","callbacks","waiting","timerFunc","Promise","resolve","then","flushCallbacks","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","cbs","flushQueue","q","initComputed","computed","$options","watchers","_computedWatchers","useDef","fn","defineComputed","setter","createComputedGetter","initWatch","watch","handler","createWatcher","$watch","initStateMixin","Vue","$nextTick","initState","initData","_data","vmCount","proxy","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","text","substring","chars","attr","name","node","createASTElement","parent","children","replace","type","n","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codeGen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","Ctor","components","createComponentVnode","createTextVNode","componentOptions","isSameVnode","vnode1","vnode2","_base","extend","hook","init","instance","componentInstance","$mount","createComponent","createElm","$el","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifecycle","_render","_update","prevVnode","_vnode","_c","_v","_s","mountComponent","updateComponent","callHook","handlers","strats","LIFECYCLE","p","c","parentVal","childVal","res","mergeOptions","mergeField","hasOwnProperty","initMixins","_init","constructor","querySelector","ops","outerHTML","initGlobalAPI","mixin","Sub","component","definition"],"mappings":"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"}